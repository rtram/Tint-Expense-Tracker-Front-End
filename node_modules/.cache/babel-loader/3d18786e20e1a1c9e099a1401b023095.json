{"ast":null,"code":"import _toConsumableArray from \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/src/HomeView/Containers/UserHome.js\";\nimport React, { Component } from \"react\";\nimport Summary from \"./Summary\";\nimport CategoryContainer from \"./CategoryContainer\";\nimport CategoryDetails from \"../../CategoryView/Containers/CategoryDetails\";\nimport UserHomeChart from \"../Components/UserHomeChart.js\";\nimport { Route, Switch } from 'react-router-dom';\nimport { Jumbotron, Carousel } from \"react-bootstrap\";\n\nvar UserHome =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserHome, _Component);\n\n  function UserHome() {\n    var _this;\n\n    _classCallCheck(this, UserHome);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserHome).call(this));\n\n    _this.fetchTransactions = function () {\n      var userId = _this.props.userId;\n      fetch(\"http://localhost:3001/users/\".concat(userId)).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        // FILTERS CURRENT MONTH TRANSACTIONS ==========================================\n        var currentMonthTransactions = json.transactions.filter(function (transactionObject) {\n          var transactionMonthInt = parseInt(transactionObject.date.split(\"-\")[1]);\n          var transactionYearInt = parseInt(transactionObject.date.split(\"-\")[0]);\n          var presentMonth = new Date().getMonth() + 1;\n          var presentYear = new Date().getFullYear();\n          return presentMonth === transactionMonthInt && presentYear === transactionYearInt;\n        });\n\n        _this.setState({\n          transactions: json.transactions,\n          currentMonthTransactions: currentMonthTransactions\n        }); // =============================================================================\n\n\n        var threeMonthData = [];\n        var currentMonth;\n        var lastMonth;\n        var lastLastMonth; // CURRENT MONTH TOTAL\n\n        if (_this.state.transactions) {\n          var _currentMonthTransactions = _this.state.transactions.filter(function (transactionObject) {\n            var transactionMonthInt = parseInt(transactionObject.date.split(\"-\")[1]);\n            var transactionYearInt = parseInt(transactionObject.date.split(\"-\")[0]);\n            var currentMonth = new Date().getMonth() + 1;\n            var presentYear = new Date().getFullYear();\n            return currentMonth === transactionMonthInt && presentYear === transactionYearInt;\n          });\n\n          var currentMonthTransactionsAmt = _currentMonthTransactions.map(function (transaction) {\n            return transaction.amount;\n          });\n\n          if (currentMonthTransactionsAmt.length > 0) {\n            var reducer = function reducer(accumulator, currentValue) {\n              return accumulator + currentValue;\n            };\n\n            currentMonth = currentMonthTransactionsAmt.reduce(reducer);\n            currentMonth = Math.floor(currentMonth * 100) / 100;\n          }\n        } // LAST MONTH TOTAL\n\n\n        if (_this.state.transactions) {\n          var lastMonthTransactions = _this.state.transactions.filter(function (transactionObject) {\n            var transactionMonthInt = parseInt(transactionObject.date.split(\"-\")[1]);\n            var transactionYearInt = parseInt(transactionObject.date.split(\"-\")[0]);\n            var currentMonth = new Date().getMonth() + 1;\n\n            if (currentMonth === 1) {\n              var year = new Date().getFullYear() - 1;\n              return lastMonth === transactionMonthInt && presentYear === transactionYearInt;\n            }\n\n            var presentYear = new Date().getFullYear();\n            return lastMonth === transactionMonthInt && presentYear === transactionYearInt;\n          });\n\n          var lastMonthTransactionsAmt = lastMonthTransactions.map(function (transaction) {\n            return transaction.amount;\n          });\n\n          if (lastMonthTransactionsAmt.length > 0) {\n            var _reducer = function _reducer(accumulator, currentValue) {\n              return accumulator + currentValue;\n            };\n\n            lastMonth = lastMonthTransactionsAmt.reduce(_reducer);\n            lastMonth = Math.floor(lastMonth * 100) / 100;\n          } else {\n            lastMonth = 0.00;\n          }\n        } // LAST LAST MONTH TOTAL\n\n\n        if (_this.state.transactions) {\n          var lastLastMonthTransactions = _this.state.transactions.filter(function (transactionObject) {\n            var transactionMonthInt = parseInt(transactionObject.date.split(\"-\")[1]);\n            var transactionYearInt = parseInt(transactionObject.date.split(\"-\")[0]);\n            var lastLastMonth = new Date().getMonth() - 1;\n            var presentYear = new Date().getFullYear();\n            return lastLastMonth === transactionMonthInt && presentYear === transactionYearInt;\n          });\n\n          var lastLastMonthTransactionsAmt = lastLastMonthTransactions.map(function (transaction) {\n            return transaction.amount;\n          });\n\n          if (lastLastMonthTransactionsAmt.length > 0) {\n            var _reducer2 = function _reducer2(accumulator, currentValue) {\n              return accumulator + currentValue;\n            };\n\n            lastLastMonth = lastLastMonthTransactionsAmt.reduce(_reducer2);\n            lastLastMonth = Math.floor(lastLastMonth * 100) / 100;\n          } else lastLastMonth = 0.00;\n        }\n\n        threeMonthData = [lastLastMonth, lastMonth, currentMonth];\n\n        _this.setState({\n          threeMonthData: threeMonthData\n        });\n      });\n    };\n\n    _this.addTransaction = function (transactionObject) {\n      var allTransactions = [].concat(_toConsumableArray(_this.state.transactions), [transactionObject]); // FILTERS CURRENT MONTH TRANSACTIONS ==========================================\n\n      var currentMonthTransactions = allTransactions.filter(function (transactionObject) {\n        var transactionMonthInt = parseInt(transactionObject.date.split(\"-\")[1]);\n        var transactionYearInt = parseInt(transactionObject.date.split(\"-\")[0]);\n        var presentMonth = new Date().getMonth() + 1;\n        var presentYear = new Date().getFullYear();\n        return presentMonth === transactionMonthInt && presentYear === transactionYearInt;\n      }); // =============================================================================\n\n      _this.setState({\n        transactions: allTransactions,\n        currentMonthTransactions: currentMonthTransactions\n      });\n    };\n\n    _this.handleDelete = function (transactionObject) {\n      fetch(\"http://localhost:3001/transactions/\".concat(transactionObject.id), {\n        method: \"DELETE\"\n      }); // DELETING FROM THIS.STATE.TRANSACTIONS\n\n      var copyOfAllTransactions = _toConsumableArray(_this.state.transactions);\n\n      var indexOfAllTransactions = _this.state.transactions.indexOf(transactionObject);\n\n      copyOfAllTransactions.splice(indexOfAllTransactions, 1);\n\n      _this.setState({\n        transactions: copyOfAllTransactions\n      }); // DELETING FROM THIS.STATE.CURRENTMONTHTRANSACTIONS\n\n\n      var copyOfCurrentMonthTransactions = _toConsumableArray(_this.state.currentMonthTransactions);\n\n      var indexOfCurrentMonthTransactions = _this.state.currentMonthTransactions.indexOf(transactionObject);\n\n      copyOfCurrentMonthTransactions.splice(indexOfCurrentMonthTransactions, 1);\n\n      _this.setState({\n        currentMonthTransactions: copyOfCurrentMonthTransactions\n      });\n    };\n\n    _this.handleTransactionArrayUpdate = function (updateObject, transactionObject) {\n      var copyOfTransactions = _toConsumableArray(_this.state.transactions);\n\n      var index = copyOfTransactions.indexOf(transactionObject);\n      copyOfTransactions.splice(index, 1, updateObject); // FILTERS CURRENT MONTH TRANSACTIONS ==========================================\n\n      var currentMonthTransactions = copyOfTransactions.filter(function (transactionObject) {\n        var transactionMonthInt = parseInt(transactionObject.date.split(\"-\")[1]);\n        var transactionYearInt = parseInt(transactionObject.date.split(\"-\")[0]);\n        var presentMonth = new Date().getMonth() + 1;\n        var presentYear = new Date().getFullYear();\n        return presentMonth === transactionMonthInt && presentYear === transactionYearInt;\n      }); // =============================================================================\n\n      _this.setState({\n        transactions: copyOfTransactions,\n        currentMonthTransactions: currentMonthTransactions\n      });\n    };\n\n    _this.state = {\n      transactions: null,\n      currentMonthTransactions: null\n    };\n    return _this;\n  }\n\n  _createClass(UserHome, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchTransactions();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      //GET CURRENT MONTH=============================================================\n      var months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n      var currentMonthGetter = function currentMonthGetter() {\n        var index = new Date().getMonth();\n        return months[index];\n      };\n\n      var currentMonth = currentMonthGetter(); //CHART METHODS=================================================================\n\n      var labelGetter = function labelGetter() {\n        var lastThreeMonths = [];\n        var index = new Date().getMonth();\n        lastThreeMonths.push(months[index - 2]);\n        lastThreeMonths.push(months[index - 1]);\n        lastThreeMonths.push(months[index]);\n        return lastThreeMonths;\n      }; //==============================================================================\n\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/users/:id/:categoryId\",\n        render: function render(props) {\n          var categoryId = props.match.params.categoryId;\n          var userId = props.match.params.id;\n          var selectedCategory;\n          var userCurrentTransactions;\n          var currentUserObject;\n\n          if (_this2.state.transactions) {\n            currentUserObject = _this2.state.transactions.find(function (transactionObject) {\n              return transactionObject.user.id === parseInt(userId);\n            }).user;\n          }\n\n          if (_this2.state.transactions) {\n            selectedCategory = _this2.state.transactions.filter(function (transactionObject) {\n              return transactionObject.category.id === parseInt(categoryId);\n            });\n            selectedCategory = selectedCategory[0].category;\n            userCurrentTransactions = _this2.state.currentMonthTransactions.filter(function (transactionObject) {\n              return transactionObject.category.id === parseInt(categoryId);\n            });\n          }\n\n          return React.createElement(CategoryDetails, {\n            selectedCategory: selectedCategory,\n            transactions: userCurrentTransactions,\n            userObject: currentUserObject,\n            addTransaction: _this2.addTransaction,\n            handleDelete: _this2.handleDelete,\n            handleTransactionArrayUpdate: _this2.handleTransactionArrayUpdate,\n            currentMonth: currentMonth,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 233\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/users/:id\",\n        render: function render(props) {\n          var userId = props.match.params.id;\n          var currentUserObject;\n\n          if (_this2.state.transactions) {\n            currentUserObject = _this2.state.transactions.find(function (transactionObject) {\n              return transactionObject.user.id === parseInt(userId);\n            }).user;\n          }\n\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 254\n            },\n            __self: this\n          }, React.createElement(Jumbotron, {\n            className: \"Jumbotron\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 255\n            },\n            __self: this\n          }, React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 256\n            },\n            __self: this\n          }, \"Welcome Back \", currentUserObject ? currentUserObject.first_name : null, \"!\")), React.createElement(Carousel, {\n            className: \"Carousel\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 259\n            },\n            __self: this\n          }, React.createElement(Carousel.Item, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 260\n            },\n            __self: this\n          }, React.createElement(\"h2\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 261\n            },\n            __self: this\n          }, \"Tip #1\"), React.createElement(\"p\", {\n            id: \"smaller-font\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 262\n            },\n            __self: this\n          }, \"Check your credit score\"), React.createElement(\"p\", {\n            id: \"smaller-font1\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 263\n            },\n            __self: this\n          }, \"Your credit score is a numeric representation of your credit that informs lenders about what kind of borrower you are.\"), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 264\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 265\n            },\n            __self: this\n          })), React.createElement(Carousel.Item, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 267\n            },\n            __self: this\n          }, React.createElement(\"h2\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 268\n            },\n            __self: this\n          }, \"Tip #2\"), React.createElement(\"p\", {\n            id: \"smaller-font\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 269\n            },\n            __self: this\n          }, \"Pay more than the minimum on your credit card\"), React.createElement(\"p\", {\n            id: \"smaller-font1\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 270\n            },\n            __self: this\n          }, \"When it comes to paying your credit card, settling for the bare minimum makes you a slave to interest.\"), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 271\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 272\n            },\n            __self: this\n          })), React.createElement(Carousel.Item, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 274\n            },\n            __self: this\n          }, React.createElement(\"h2\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 275\n            },\n            __self: this\n          }, \"Tip #3\"), React.createElement(\"p\", {\n            id: \"smaller-font\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 276\n            },\n            __self: this\n          }, \"Up your retirement contribution\"), React.createElement(\"p\", {\n            id: \"smaller-font1\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 277\n            },\n            __self: this\n          }, \"Compound interest can become your best friend if you start saving now.\"), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 278\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 279\n            },\n            __self: this\n          })), React.createElement(Carousel.Item, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 281\n            },\n            __self: this\n          }, React.createElement(\"h2\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 282\n            },\n            __self: this\n          }, \"Tip #4\"), React.createElement(\"p\", {\n            id: \"smaller-font\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 283\n            },\n            __self: this\n          }, \"Sign up for autopay on your debt\"), React.createElement(\"p\", {\n            id: \"smaller-font1\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 284\n            },\n            __self: this\n          }, \"Missing a payment can hurt your credit score and tack on unnecessary late fees.\"), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 285\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 286\n            },\n            __self: this\n          }))), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 291\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 292\n            },\n            __self: this\n          }), React.createElement(Summary, {\n            transactions: _this2.state.currentMonthTransactions,\n            currentMonth: currentMonth,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 294\n            },\n            __self: this\n          }), React.createElement(UserHomeChart, {\n            label: labelGetter(),\n            data: _this2.state.threeMonthData,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 298\n            },\n            __self: this\n          }), React.createElement(CategoryContainer, {\n            transactions: _this2.state.currentMonthTransactions,\n            userObject: currentUserObject,\n            currentMonth: currentMonth,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 302\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return UserHome;\n}(Component);\n\nexport { UserHome as default };","map":{"version":3,"sources":["/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/src/HomeView/Containers/UserHome.js"],"names":["React","Component","Summary","CategoryContainer","CategoryDetails","UserHomeChart","Route","Switch","Jumbotron","Carousel","UserHome","fetchTransactions","userId","props","fetch","then","res","json","currentMonthTransactions","transactions","filter","transactionObject","transactionMonthInt","parseInt","date","split","transactionYearInt","presentMonth","Date","getMonth","presentYear","getFullYear","setState","threeMonthData","currentMonth","lastMonth","lastLastMonth","state","currentMonthTransactionsAmt","map","transaction","amount","length","reducer","accumulator","currentValue","reduce","Math","floor","lastMonthTransactions","year","lastMonthTransactionsAmt","lastLastMonthTransactions","lastLastMonthTransactionsAmt","addTransaction","allTransactions","handleDelete","id","method","copyOfAllTransactions","indexOfAllTransactions","indexOf","splice","copyOfCurrentMonthTransactions","indexOfCurrentMonthTransactions","handleTransactionArrayUpdate","updateObject","copyOfTransactions","index","months","currentMonthGetter","labelGetter","lastThreeMonths","push","categoryId","match","params","selectedCategory","userCurrentTransactions","currentUserObject","find","user","category","first_name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport Summary from \"./Summary\"\nimport CategoryContainer from \"./CategoryContainer\"\nimport CategoryDetails from \"../../CategoryView/Containers/CategoryDetails\"\nimport UserHomeChart from \"../Components/UserHomeChart.js\"\nimport {Route, Switch} from 'react-router-dom'\nimport {Jumbotron, Carousel} from \"react-bootstrap\"\n\nexport default class UserHome extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      transactions: null,\n      currentMonthTransactions: null\n    }\n  }\n\n  componentDidMount() {\n    this.fetchTransactions()\n  }\n\n  fetchTransactions = () => {\n    let userId = this.props.userId\n    fetch(`http://localhost:3001/users/${userId}`)\n      .then(res => res.json())\n      .then(json => {\n\n// FILTERS CURRENT MONTH TRANSACTIONS ==========================================\n        let currentMonthTransactions = json.transactions.filter(transactionObject => {\n          let transactionMonthInt = parseInt(transactionObject.date.split(\"-\")[1])\n          let transactionYearInt = parseInt(transactionObject.date.split(\"-\")[0])\n          let presentMonth = new Date().getMonth() + 1\n          let presentYear = new Date().getFullYear()\n\n          return (presentMonth === transactionMonthInt) && (presentYear === transactionYearInt)\n        })\n\n        this.setState({\n          transactions: json.transactions,\n          currentMonthTransactions: currentMonthTransactions\n        })\n// =============================================================================\n\n        let threeMonthData = []\n        let currentMonth;\n        let lastMonth;\n        let lastLastMonth;\n\n\n        // CURRENT MONTH TOTAL\n        if (this.state.transactions) {\n          let currentMonthTransactions = this.state.transactions.filter(transactionObject => {\n            let transactionMonthInt = parseInt(transactionObject.date.split(\"-\")[1])\n            let transactionYearInt = parseInt(transactionObject.date.split(\"-\")[0])\n            let currentMonth = new Date().getMonth() + 1\n            let presentYear = new Date().getFullYear()\n            return (currentMonth === transactionMonthInt) && (presentYear === transactionYearInt)\n          })\n          let currentMonthTransactionsAmt = currentMonthTransactions.map(transaction => transaction.amount)\n\n          if (currentMonthTransactionsAmt.length > 0) {\n            let reducer = (accumulator, currentValue) => accumulator + currentValue\n            currentMonth = currentMonthTransactionsAmt.reduce(reducer)\n            currentMonth = Math.floor(currentMonth * 100) / 100\n          }\n        }\n\n        // LAST MONTH TOTAL\n        if (this.state.transactions) {\n          let lastMonthTransactions = this.state.transactions.filter(transactionObject => {\n            let transactionMonthInt = parseInt(transactionObject.date.split(\"-\")[1])\n            let transactionYearInt = parseInt(transactionObject.date.split(\"-\")[0])\n            let currentMonth = new Date().getMonth() + 1\n\n            if (currentMonth === 1) {\n              let year = new Date().getFullYear() - 1\n              return (lastMonth === transactionMonthInt) && (presentYear === transactionYearInt)\n            }\n            let presentYear = new Date().getFullYear()\n            return (lastMonth === transactionMonthInt) && (presentYear === transactionYearInt)\n          })\n          let lastMonthTransactionsAmt = lastMonthTransactions.map(transaction => transaction.amount)\n\n          if (lastMonthTransactionsAmt.length > 0) {\n            let reducer = (accumulator, currentValue) => accumulator + currentValue\n            lastMonth = lastMonthTransactionsAmt.reduce(reducer)\n            lastMonth = Math.floor(lastMonth * 100) / 100\n          } else {\n            lastMonth = 0.00\n          }\n\n        }\n\n        // LAST LAST MONTH TOTAL\n        if (this.state.transactions) {\n          let lastLastMonthTransactions = this.state.transactions.filter(transactionObject => {\n            let transactionMonthInt = parseInt(transactionObject.date.split(\"-\")[1])\n            let transactionYearInt = parseInt(transactionObject.date.split(\"-\")[0])\n            let lastLastMonth = new Date().getMonth() - 1\n            let presentYear = new Date().getFullYear()\n            return (lastLastMonth === transactionMonthInt) && (presentYear === transactionYearInt)\n          })\n          let lastLastMonthTransactionsAmt = lastLastMonthTransactions.map(transaction => transaction.amount)\n\n          if (lastLastMonthTransactionsAmt.length > 0) {\n            let reducer = (accumulator, currentValue) => accumulator + currentValue\n            lastLastMonth = lastLastMonthTransactionsAmt.reduce(reducer)\n            lastLastMonth = Math.floor(lastLastMonth * 100) / 100\n          } else (\n            lastLastMonth = 0.00\n          )\n        }\n\n        threeMonthData = [lastLastMonth, lastMonth, currentMonth]\n\n        this.setState({\n          threeMonthData: threeMonthData\n        })\n\n      })\n  }\n\n  addTransaction = (transactionObject) => {\n    let allTransactions = [...this.state.transactions, transactionObject]\n\n// FILTERS CURRENT MONTH TRANSACTIONS ==========================================\n    let currentMonthTransactions = allTransactions.filter(transactionObject => {\n      let transactionMonthInt = parseInt(transactionObject.date.split(\"-\")[1])\n      let transactionYearInt = parseInt(transactionObject.date.split(\"-\")[0])\n      let presentMonth = new Date().getMonth() + 1\n      let presentYear = new Date().getFullYear()\n      return (presentMonth === transactionMonthInt) && (presentYear === transactionYearInt)\n    })\n// =============================================================================\n    this.setState({\n      transactions: allTransactions,\n      currentMonthTransactions: currentMonthTransactions\n    })\n  }\n\n  handleDelete = (transactionObject) => {\n    fetch(`http://localhost:3001/transactions/${transactionObject.id}`, {\n      method: \"DELETE\"\n    })\n\n    // DELETING FROM THIS.STATE.TRANSACTIONS\n    let copyOfAllTransactions = [...this.state.transactions]\n    let indexOfAllTransactions = this.state.transactions.indexOf(transactionObject)\n    copyOfAllTransactions.splice(indexOfAllTransactions, 1)\n    this.setState({\n      transactions: copyOfAllTransactions\n    })\n\n    // DELETING FROM THIS.STATE.CURRENTMONTHTRANSACTIONS\n    let copyOfCurrentMonthTransactions = [...this.state.currentMonthTransactions]\n    let indexOfCurrentMonthTransactions = this.state.currentMonthTransactions.indexOf(transactionObject)\n    copyOfCurrentMonthTransactions.splice(indexOfCurrentMonthTransactions, 1)\n    this.setState({\n      currentMonthTransactions: copyOfCurrentMonthTransactions\n    })\n\n\n  }\n\n  handleTransactionArrayUpdate = (updateObject, transactionObject) => {\n    let copyOfTransactions = [...this.state.transactions]\n    let index = copyOfTransactions.indexOf(transactionObject)\n    copyOfTransactions.splice(index, 1, updateObject)\n\n// FILTERS CURRENT MONTH TRANSACTIONS ==========================================\n    let currentMonthTransactions = copyOfTransactions.filter(transactionObject => {\n      let transactionMonthInt = parseInt(transactionObject.date.split(\"-\")[1])\n      let transactionYearInt = parseInt(transactionObject.date.split(\"-\")[0])\n      let presentMonth = new Date().getMonth() + 1\n      let presentYear = new Date().getFullYear()\n      return (presentMonth === transactionMonthInt) && (presentYear === transactionYearInt)\n    })\n// =============================================================================\n\n    this.setState({\n      transactions: copyOfTransactions,\n      currentMonthTransactions: currentMonthTransactions\n    })\n  }\n\n  render() {\n\n//GET CURRENT MONTH=============================================================\n    let months    =['January','February','March','April','May','June','July','August','September','October','November','December']\n\n    let currentMonthGetter = () => {\n      let index = new Date().getMonth()\n      return months[index]\n    }\n\n    let currentMonth = currentMonthGetter()\n\n//CHART METHODS=================================================================\n    let labelGetter = () => {\n      let lastThreeMonths = []\n      let index = new Date().getMonth()\n      lastThreeMonths.push(months[index-2])\n      lastThreeMonths.push(months[index-1])\n      lastThreeMonths.push(months[index])\n      return lastThreeMonths\n    }\n\n//==============================================================================\n\n    return (\n      <div>\n        <Switch>\n        <Route path='/users/:id/:categoryId' render={props => {\n          let categoryId = props.match.params.categoryId\n          let userId = props.match.params.id\n          let selectedCategory;\n          let userCurrentTransactions;\n          let currentUserObject;\n\n          if (this.state.transactions) {\n            currentUserObject = this.state.transactions.find(transactionObject => transactionObject.user.id === parseInt(userId)).user\n          }\n\n          if (this.state.transactions) {\n            selectedCategory = this.state.transactions.filter(transactionObject => transactionObject.category.id === parseInt(categoryId))\n            selectedCategory = selectedCategory[0].category\n\n            userCurrentTransactions = this.state.currentMonthTransactions.filter(transactionObject => (transactionObject.category.id === parseInt(categoryId)))\n          }\n\n          return (\n            <CategoryDetails\n              selectedCategory={selectedCategory}\n              transactions={userCurrentTransactions}\n              userObject={currentUserObject}\n              addTransaction={this.addTransaction}\n              handleDelete={this.handleDelete}\n              handleTransactionArrayUpdate={this.handleTransactionArrayUpdate}\n              currentMonth={currentMonth}\n            />\n          )\n        }} />\n\n        <Route path='/users/:id' render={props => {\n          let userId = props.match.params.id\n          let currentUserObject;\n\n          if (this.state.transactions) {\n            currentUserObject = this.state.transactions.find(transactionObject => transactionObject.user.id === parseInt(userId)).user\n          }\n\n          return (\n            <div>\n            <Jumbotron className=\"Jumbotron\">\n              <h1>Welcome Back {currentUserObject ? currentUserObject.first_name : null}!</h1>\n            </Jumbotron>\n\n            <Carousel className=\"Carousel\">\n              <Carousel.Item>\n                <h2>Tip #1</h2>\n                <p id=\"smaller-font\" >Check your credit score</p>\n                <p id=\"smaller-font1\" >Your credit score is a numeric representation of your credit that informs lenders about what kind of borrower you are.</p>\n                <br/>\n                <br/>\n              </Carousel.Item>\n              <Carousel.Item>\n                <h2>Tip #2</h2>\n                <p id=\"smaller-font\">Pay more than the minimum on your credit card</p>\n                <p id=\"smaller-font1\">When it comes to paying your credit card, settling for the bare minimum makes you a slave to interest.</p>\n                <br/>\n                <br/>\n              </Carousel.Item>\n              <Carousel.Item>\n                <h2>Tip #3</h2>\n                <p id=\"smaller-font\">Up your retirement contribution</p>\n                <p id=\"smaller-font1\">Compound interest can become your best friend if you start saving now.</p>\n                <br/>\n                <br/>\n              </Carousel.Item>\n              <Carousel.Item>\n                <h2>Tip #4</h2>\n                <p id=\"smaller-font\">Sign up for autopay on your debt</p>\n                <p id=\"smaller-font1\">Missing a payment can hurt your credit score and tack on unnecessary late fees.</p>\n                <br/>\n                <br/>\n              </Carousel.Item>\n\n            </Carousel>\n\n            <br/>\n            <br/>\n\n            <Summary\n              transactions={this.state.currentMonthTransactions}\n              currentMonth={currentMonth}\n            />\n            <UserHomeChart\n              label={labelGetter()}\n              data={this.state.threeMonthData}\n            />\n            <CategoryContainer\n              transactions={this.state.currentMonthTransactions}\n              userObject={currentUserObject}\n              currentMonth={currentMonth}\n            />\n            </div>\n          )\n        }} />\n        </Switch>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}