{"ast":null,"code":"import _toConsumableArray from \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { combineReducers } from 'redux';\n\nvar userReducer = function userReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'FETCHED_TRANSACTIONS':\n      return {\n        id: action.payload.id,\n        first_name: action.payload.first_name,\n        last_name: action.payload.last_name\n      };\n\n    default:\n      return state;\n  }\n};\n\nvar transactionsReducer = function transactionsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'FETCHED_TRANSACTIONS':\n      return action.payload.transactions;\n\n    case 'POSTED_TRANSACTION':\n      return [].concat(_toConsumableArray(state), [action.payload]);\n\n    case 'UPDATED_TRANSACTION':\n      var originalTransaction = state.find(function (transactionObject) {\n        return transactionObject.id === action.payload.id;\n      });\n      var index = state.indexOf(originalTransaction);\n      var copyState = state.slice();\n      copyState.splice(index, 1, action.payload);\n      return copyState;\n\n    case 'DELETED_TRANSACTION':\n      originalTransaction = state.find(function (transactionObject) {\n        return transactionObject.id === action.payload.id;\n      });\n      index = state.indexOf(originalTransaction);\n      copyState = state.slice();\n      copyState.splice(index, 1);\n      debugger;\n      return copyState;\n\n    default:\n      return state;\n  }\n};\n\nvar categoryNamesReducer = function categoryNamesReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [\"Auto & Transport\", \"Bills & Utilities\", \"Education\", \"Entertainment\", \"Food & Dining\", \"Gifts & Donations\", \"Health & Fitness\", \"Miscellaneous\", \"Shopping\", \"Travel\"];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return state;\n};\n\nvar rootReducer = combineReducers({\n  user: userReducer,\n  transactions: transactionsReducer,\n  categoryNames: categoryNamesReducer\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/src/redux/reducers/index.js"],"names":["combineReducers","userReducer","state","action","type","id","payload","first_name","last_name","transactionsReducer","transactions","originalTransaction","find","transactionObject","index","indexOf","copyState","slice","splice","categoryNamesReducer","rootReducer","user","categoryNames"],"mappings":";AAAA,SAASA,eAAT,QAAgC,OAAhC;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AAC1C,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,sBAAL;AACE,aAAO;AACLC,QAAAA,EAAE,EAAEF,MAAM,CAACG,OAAP,CAAeD,EADd;AAELE,QAAAA,UAAU,EAAEJ,MAAM,CAACG,OAAP,CAAeC,UAFtB;AAGLC,QAAAA,SAAS,EAAEL,MAAM,CAACG,OAAP,CAAeE;AAHrB,OAAP;;AAKF;AACE,aAAON,KAAP;AARJ;AAUD,CAXD;;AAaA,IAAMO,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAwB;AAAA,MAAvBP,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,sBAAL;AACE,aAAOD,MAAM,CAACG,OAAP,CAAeI,YAAtB;;AACF,SAAK,oBAAL;AACE,0CAAWR,KAAX,IAAkBC,MAAM,CAACG,OAAzB;;AACF,SAAK,qBAAL;AACE,UAAIK,mBAAmB,GAAGT,KAAK,CAACU,IAAN,CAAW,UAAAC,iBAAiB;AAAA,eACpDA,iBAAiB,CAACR,EAAlB,KAAyBF,MAAM,CAACG,OAAP,CAAeD,EADY;AAAA,OAA5B,CAA1B;AAGA,UAAIS,KAAK,GAAGZ,KAAK,CAACa,OAAN,CAAcJ,mBAAd,CAAZ;AACA,UAAIK,SAAS,GAAGd,KAAK,CAACe,KAAN,EAAhB;AACAD,MAAAA,SAAS,CAACE,MAAV,CAAiBJ,KAAjB,EAAwB,CAAxB,EAA2BX,MAAM,CAACG,OAAlC;AACA,aAAOU,SAAP;;AACF,SAAK,qBAAL;AACEL,MAAAA,mBAAmB,GAAGT,KAAK,CAACU,IAAN,CAAW,UAAAC,iBAAiB;AAAA,eAChDA,iBAAiB,CAACR,EAAlB,KAAyBF,MAAM,CAACG,OAAP,CAAeD,EADQ;AAAA,OAA5B,CAAtB;AAGAS,MAAAA,KAAK,GAAGZ,KAAK,CAACa,OAAN,CAAcJ,mBAAd,CAAR;AACAK,MAAAA,SAAS,GAAGd,KAAK,CAACe,KAAN,EAAZ;AACAD,MAAAA,SAAS,CAACE,MAAV,CAAiBJ,KAAjB,EAAwB,CAAxB;AACA;AACA,aAAOE,SAAP;;AACF;AACE,aAAOd,KAAP;AAvBJ;AAyBD,CA1BD;;AA4BA,IAAMiB,oBAAoB,GAAG,SAAvBA,oBAAuB,GAA8L;AAAA,MAA7LjB,KAA6L,uEAArL,CAAC,kBAAD,EAAqB,mBAArB,EAA0C,WAA1C,EAAuD,eAAvD,EAAwE,eAAxE,EAAyF,mBAAzF,EAA8G,kBAA9G,EAAkI,eAAlI,EAAmJ,UAAnJ,EAA+J,QAA/J,CAAqL;AAAA,MAAXC,MAAW;AACzN,SAAOD,KAAP;AACD,CAFD;;AAIA,IAAMkB,WAAW,GAAGpB,eAAe,CAAC;AAClCqB,EAAAA,IAAI,EAAEpB,WAD4B;AAElCS,EAAAA,YAAY,EAAED,mBAFoB;AAGlCa,EAAAA,aAAa,EAAEH;AAHmB,CAAD,CAAnC;AAOA,eAAeC,WAAf","sourcesContent":["import { combineReducers } from 'redux'\n\nconst userReducer = (state = {}, action) => {\n  switch(action.type) {\n    case 'FETCHED_TRANSACTIONS':\n      return {\n        id: action.payload.id,\n        first_name: action.payload.first_name,\n        last_name: action.payload.last_name\n      }\n    default:\n      return state\n  }\n}\n\nconst transactionsReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'FETCHED_TRANSACTIONS':\n      return action.payload.transactions\n    case 'POSTED_TRANSACTION':\n      return [...state, action.payload]\n    case 'UPDATED_TRANSACTION':\n      let originalTransaction = state.find(transactionObject => (\n        transactionObject.id === action.payload.id\n      ))\n      let index = state.indexOf(originalTransaction)\n      let copyState = state.slice()\n      copyState.splice(index, 1, action.payload)\n      return copyState\n    case 'DELETED_TRANSACTION':\n      originalTransaction = state.find(transactionObject => (\n        transactionObject.id === action.payload.id\n      ))\n      index = state.indexOf(originalTransaction)\n      copyState = state.slice()\n      copyState.splice(index, 1)\n      debugger\n      return copyState\n    default:\n      return state\n  }\n}\n\nconst categoryNamesReducer = (state = [\"Auto & Transport\", \"Bills & Utilities\", \"Education\", \"Entertainment\", \"Food & Dining\", \"Gifts & Donations\", \"Health & Fitness\", \"Miscellaneous\", \"Shopping\", \"Travel\"], action) => {\n  return state\n}\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  transactions: transactionsReducer,\n  categoryNames: categoryNamesReducer\n})\n\n\nexport default rootReducer\n"]},"metadata":{},"sourceType":"module"}