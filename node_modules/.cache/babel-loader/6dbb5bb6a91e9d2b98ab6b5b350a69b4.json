{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/src/HomeView/Containers/Summary.js\";\nimport React from \"react\";\n\nvar Summary = function Summary(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, \"Your Personal Spending Summary\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }), \"You have spent \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"$\", calculateTotal(props.transactions)), \" in \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.currentMonth), \"!\");\n};\n\nvar calculateTotal = function calculateTotal(array) {\n  var monthTotal;\n  var monthTransactionsAmt = array.map(function (transaction) {\n    return transaction.amount;\n  });\n\n  if (!monthTransactionsAmt.length > 0) {\n    monthTotal = 0.00;\n  } else {\n    monthTotal = transactionsReducer(monthTransactionsAmt);\n  }\n\n  return monthTotal;\n};\n\nvar transactionsReducer = function transactionsReducer(arr) {\n  var reducer = function reducer(accumulator, currentValue) {\n    return accumulator + currentValue;\n  };\n\n  var total = arr.reduce(reducer);\n  var floatTotal = Math.floor(total * 100) / 100;\n  return floatTotal;\n};\n\nexport default Summary;","map":{"version":3,"sources":["/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/src/HomeView/Containers/Summary.js"],"names":["React","Summary","props","calculateTotal","transactions","currentMonth","array","monthTotal","monthTransactionsAmt","map","transaction","amount","length","transactionsReducer","arr","reducer","accumulator","currentValue","total","reduce","floatTotal","Math","floor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK;AAAA,SACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,qBAKiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAUC,cAAc,CAACD,KAAK,CAACE,YAAP,CAAxB,CALjB,UAK2E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASF,KAAK,CAACG,YAAf,CAL3E,MADmB;AAAA,CAArB;;AAUA,IAAMF,cAAc,GAAG,SAAjBA,cAAiB,CAACG,KAAD,EAAW;AAC9B,MAAIC,UAAJ;AACA,MAAIC,oBAAoB,GAAGF,KAAK,CAACG,GAAN,CAAU,UAAAC,WAAW;AAAA,WAAIA,WAAW,CAACC,MAAhB;AAAA,GAArB,CAA3B;;AAEA,MAAI,CAACH,oBAAoB,CAACI,MAAtB,GAA+B,CAAnC,EAAsC;AACpCL,IAAAA,UAAU,GAAG,IAAb;AACD,GAFD,MAEO;AACLA,IAAAA,UAAU,GAAGM,mBAAmB,CAACL,oBAAD,CAAhC;AACD;;AACD,SAAOD,UAAP;AACD,CAVH;;AAYA,IAAMM,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,GAAD,EAAS;AACjC,MAAIC,OAAO,GAAG,SAAVA,OAAU,CAACC,WAAD,EAAcC,YAAd;AAAA,WAA+BD,WAAW,GAAGC,YAA7C;AAAA,GAAd;;AACA,MAAIC,KAAK,GAAGJ,GAAG,CAACK,MAAJ,CAAWJ,OAAX,CAAZ;AACA,MAAIK,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAK,GAAG,GAAnB,IAA0B,GAA3C;AACA,SAAOE,UAAP;AACD,CALH;;AAOA,eAAenB,OAAf","sourcesContent":["import React from \"react\"\n\nconst Summary = props => (\n  <div>\n    <h1>\n      <strong>Your Personal Spending Summary</strong>\n    </h1>\n    <br/>\n    You have spent <strong>${calculateTotal(props.transactions)}</strong> in <strong>{props.currentMonth}</strong>!\n  </div>\n)\n\nconst calculateTotal = (array) => {\n    let monthTotal;\n    let monthTransactionsAmt = array.map(transaction => transaction.amount)\n\n    if (!monthTransactionsAmt.length > 0) {\n      monthTotal = 0.00\n    } else {\n      monthTotal = transactionsReducer(monthTransactionsAmt)\n    }\n    return monthTotal\n  }\n\nconst transactionsReducer = (arr) => {\n    let reducer = (accumulator, currentValue) => accumulator + currentValue\n    let total = arr.reduce(reducer)\n    let floatTotal = Math.floor(total * 100) / 100\n    return floatTotal\n  }\n\nexport default Summary\n"]},"metadata":{},"sourceType":"module"}