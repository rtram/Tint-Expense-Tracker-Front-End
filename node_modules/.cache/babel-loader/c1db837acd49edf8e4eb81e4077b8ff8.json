{"ast":null,"code":"import _classCallCheck from \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/src/CategoryView/Containers/CategoryDetails.js\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport './CategoryDetails.css';\nimport Transaction from \"../Components/Transaction\";\nimport ExpenseForm from \"../Components/ExpenseForm\";\nimport { Link } from 'react-router-dom';\nimport { fetchingTransactions } from '../../redux/actions/transactions.js';\nimport { Table, Button, Grid, Row, Col } from 'react-bootstrap';\n\nvar CategoryDetails =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CategoryDetails, _Component);\n\n  function CategoryDetails() {\n    var _this;\n\n    _classCallCheck(this, CategoryDetails);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CategoryDetails).call(this));\n\n    _this.currentMonth = function () {\n      var index = new Date().getMonth();\n      return _this.state.months[index];\n    };\n\n    _this.currentMonthTransactions = function () {\n      return _this.props.transactions.filter(function (transactionObject) {\n        var transactionMonth = parseInt(transactionObject.date.split(\"-\")[1]);\n        var transactionYear = parseInt(transactionObject.date.split(\"-\")[0]);\n        var currentMonth = new Date().getMonth() + 1;\n        var currentYear = new Date().getFullYear();\n        return currentMonth === transactionMonth && currentYear === transactionYear;\n      });\n    };\n\n    _this.categoryTransactions = function () {\n      var transactions = _this.currentMonthTransactions().filter(function (transactionObject) {\n        return transactionObject.category.id === _this.props.categoryId;\n      });\n\n      return transactions;\n    };\n\n    _this.sortedTransactions = function () {\n      var ascendingTransactions;\n      ascendingTransactions = _this.categoryTransactions().sort(function (a, b) {\n        return new Date(a.date) - new Date(b.date);\n      });\n      return ascendingTransactions;\n    };\n\n    _this.categoryTotal = function () {\n      var categoryTotal;\n\n      var transactionAmounts = _this.categoryTransactions().map(function (transaction) {\n        return transaction.amount;\n      });\n\n      if (transactionAmounts.length === 0) {\n        return categoryTotal = 0;\n      }\n\n      categoryTotal = _this.transactionsReducer(transactionAmounts);\n      return categoryTotal;\n    };\n\n    _this.transactionsReducer = function (arr) {\n      var reducer = function reducer(accumulator, currentValue) {\n        return accumulator + currentValue;\n      };\n\n      var total = arr.reduce(reducer);\n      var floatTotal = Math.floor(total * 100) / 100;\n      return floatTotal;\n    };\n\n    _this.categoryName = function () {\n      return _this.props.categoryNames[_this.props.categoryId - 1];\n    };\n\n    _this.state = {\n      months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n    };\n    return _this;\n  }\n\n  _createClass(CategoryDetails, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchingTransactions(this.props.userId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(Col, {\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, this.props.user ? React.createElement(Link, {\n        to: \"/users/\".concat(this.props.user.id, \"/\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Button, {\n        bsStyle: \"primary\",\n        block: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Go Back to User Home\"))) : null), React.createElement(Col, {\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }))), this.props.transactions ? this.categoryName() : null, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, this.currentMonth()), React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(Col, {\n        md: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Table, {\n        bordered: true,\n        condensed: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Category\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Amount\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Edit\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, this.categoryTotal() > 0 ? this.sortedTransactions().map(function (transaction) {\n        return React.createElement(Transaction, {\n          key: transaction.id,\n          transactionObject: transaction,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        });\n      }) : null))), React.createElement(Col, {\n        md: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(Col, {\n        md: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(ExpenseForm, {\n        categoryId: this.props.categoryId,\n        selectedCategory: this.props.selectedCategory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      })), React.createElement(Col, {\n        md: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(Col, {\n        md: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Table, {\n        bordered: true,\n        condensed: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, this.props.selectedCategory ? React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, this.props.selectedCategory.name) : null, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Total\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"$\", Number.isInteger(this.categoryTotal()) ? this.categoryTotal() + \".00\" : this.categoryTotal())))), React.createElement(Col, {\n        md: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return CategoryDetails;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user,\n    transactions: state.transactions,\n    categoryNames: state.categoryNames\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchingTransactions: fetchingTransactions\n})(CategoryDetails);","map":{"version":3,"sources":["/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/src/CategoryView/Containers/CategoryDetails.js"],"names":["React","Component","connect","Transaction","ExpenseForm","Link","fetchingTransactions","Table","Button","Grid","Row","Col","CategoryDetails","currentMonth","index","Date","getMonth","state","months","currentMonthTransactions","props","transactions","filter","transactionObject","transactionMonth","parseInt","date","split","transactionYear","currentYear","getFullYear","categoryTransactions","category","id","categoryId","sortedTransactions","ascendingTransactions","sort","a","b","categoryTotal","transactionAmounts","map","transaction","amount","length","transactionsReducer","arr","reducer","accumulator","currentValue","total","reduce","floatTotal","Math","floor","categoryName","categoryNames","userId","user","selectedCategory","name","Number","isInteger","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { connect } from 'react-redux'\nimport './CategoryDetails.css';\nimport Transaction from \"../Components/Transaction\"\nimport ExpenseForm from \"../Components/ExpenseForm\"\nimport { Link } from 'react-router-dom'\nimport { fetchingTransactions } from '../../redux/actions/transactions.js'\nimport { Table, Button, Grid, Row, Col } from 'react-bootstrap'\n\nclass CategoryDetails extends Component {\n  constructor() {\n    super()\n    this.state={\n      months: ['January','February','March','April','May','June','July','August','September','October','November','December']\n    }\n  }\n\n  componentDidMount() {\n    this.props.fetchingTransactions(this.props.userId)\n  }\n\n  currentMonth = () => {\n    let index = new Date().getMonth()\n    return this.state.months[index]\n  }\n\n// RETURNS USER'S CURRENT MONTH TRANSACTIONS (ALL CATEGORIES)\n  currentMonthTransactions = () => (\n    this.props.transactions.filter(transactionObject => {\n      let transactionMonth = parseInt(transactionObject.date.split(\"-\")[1])\n      let transactionYear = parseInt(transactionObject.date.split(\"-\")[0])\n      let currentMonth = new Date().getMonth() + 1\n      let currentYear = new Date().getFullYear()\n\n      return (currentMonth === transactionMonth) && (currentYear === transactionYear)\n    })\n  )\n\n// RETURNS USER'S CURRENT MONTH CATEGORY TRANSACTIONS (SPECIFIC CATEGORY)\n  categoryTransactions = () => {\n    let transactions = this.currentMonthTransactions().filter(transactionObject => transactionObject.category.id === this.props.categoryId)\n\n    return transactions\n  }\n\n// RETURNS SORTED TRANSACTIONS - RECENT TO OLDEST\n  sortedTransactions = () => {\n    let ascendingTransactions;\n\n    ascendingTransactions = this.categoryTransactions().sort((a, b) => new Date(a.date) - new Date (b.date))\n\n    return ascendingTransactions\n  }\n\n// RETURNS CATEGORY SPECIFIC TOTAL\n  categoryTotal = () => {\n    let categoryTotal;\n    let transactionAmounts = this.categoryTransactions().map(transaction => transaction.amount)\n\n    if (transactionAmounts.length === 0) {\n      return categoryTotal = 0\n    }\n\n    categoryTotal = this.transactionsReducer(transactionAmounts)\n    return categoryTotal\n  }\n\n// TAKES IN ARRAY OF INTEGERS AND RETURNS SUM\n  transactionsReducer = (arr) => {\n    let reducer = (accumulator, currentValue) => accumulator + currentValue\n    let total = arr.reduce(reducer)\n    let floatTotal = Math.floor(total * 100) / 100\n\n    return floatTotal\n  }\n\n  categoryName = () => this.props.categoryNames[this.props.categoryId - 1]\n\n  render() {\n\n    return (\n      <div>\n\n      <Grid>\n        <Row>\n          <Col md={4}/>\n          <Col md={4}>\n            {this.props.user ?\n              <Link to={`/users/${this.props.user.id}/`}>\n                <Button bsStyle=\"primary\" block>\n                  <strong>Go Back to User Home</strong>\n                </Button>\n              </Link>: null }\n          </Col>\n          <Col md={4}/>\n        </Row>\n      </Grid>\n\n      {this.props.transactions? this.categoryName() : null}\n\n      <strong>{this.currentMonth()}</strong>\n\n      <Grid>\n        <Row>\n          <Col md={2}/>\n          <Col md={8}>\n          <Table bordered condensed hover>\n            <thead>\n              <tr>\n                <th>Date</th>\n                <th>Description</th>\n                <th>Category</th>\n                <th>Amount</th>\n                <th>Edit</th>\n              </tr>\n            </thead>\n            <tbody>\n            {this.categoryTotal() > 0 ? this.sortedTransactions().map(transaction => (\n              <Transaction\n              key={transaction.id}\n              transactionObject={transaction}\n              />)) : null\n            }\n            </tbody>\n          </Table>\n          </Col>\n          <Col md={2}/>\n        </Row>\n\n        <Row>\n          <Col md={2}/>\n          <Col md={8}>\n          <ExpenseForm\n            categoryId={this.props.categoryId}\n            selectedCategory={this.props.selectedCategory}\n          />\n          </Col>\n          <Col md={2}/>\n        </Row>\n\n        <Row>\n          <Col md={2}>\n          </Col>\n          <Col md={8}>\n          <Table bordered condensed hover>\n            <thead>\n              {this.props.selectedCategory ? <th>{this.props.selectedCategory.name}</th>: null }\n              <th>Total</th>\n              <th>${Number.isInteger(this.categoryTotal()) ? this.categoryTotal() + \".00\" : this.categoryTotal()}</th>\n            </thead>\n          </Table>\n          </Col>\n          <Col md={2}>\n          </Col>\n        </Row>\n\n        </Grid>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    transactions: state.transactions,\n    categoryNames: state.categoryNames\n  }\n}\n\nexport default connect(mapStateToProps, { fetchingTransactions })(CategoryDetails)\n"]},"metadata":{},"sourceType":"module"}