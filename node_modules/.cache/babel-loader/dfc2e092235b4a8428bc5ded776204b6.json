{"ast":null,"code":"import _toConsumableArray from \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/src/HomeView/Containers/UserHome.js\";\nimport React, { Component } from \"react\";\nimport Summary from \"./Summary\";\nimport CategoryContainer from \"./CategoryContainer\";\nimport CategoryDetails from \"../../CategoryView/Containers/CategoryDetails\";\nimport { Route, Switch } from 'react-router-dom';\nimport { Jumbotron } from \"react-bootstrap\";\n\nvar UserHome =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserHome, _Component);\n\n  function UserHome() {\n    var _this;\n\n    _classCallCheck(this, UserHome);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserHome).call(this));\n\n    _this.fetchTransactions = function () {\n      var userId = _this.props.userId;\n      fetch(\"http://localhost:3001/users/\".concat(userId)).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        var currentMonthTransactions = json.transactions.filter(function (transactionObject) {\n          var transactionMonthInt = parseInt(transactionObject.date.split(\"-\")[1]);\n          var presentMonth = new Date().getMonth() + 1;\n          return presentMonth === transactionMonthInt;\n        });\n\n        _this.setState({\n          transactions: json.transactions\n        });\n      });\n    };\n\n    _this.addTransaction = function (transactionObject) {\n      _this.setState({\n        transactions: [].concat(_toConsumableArray(_this.state.transactions), [transactionObject])\n      });\n    };\n\n    _this.handleDelete = function (transactionObject) {\n      fetch(\"http://localhost:3001/transactions/\".concat(transactionObject.id), {\n        method: \"DELETE\"\n      });\n\n      var copyOfTransactions = _toConsumableArray(_this.state.transactions);\n\n      var index = _this.state.transactions.indexOf(transactionObject);\n\n      copyOfTransactions.splice(index, 1);\n\n      _this.setState({\n        transactions: copyOfTransactions\n      });\n    };\n\n    _this.handleTransactionArrayUpdate = function (updateObject, transactionObject) {\n      var copyOfTransactions = _toConsumableArray(_this.state.transactions);\n\n      var index = copyOfTransactions.indexOf(transactionObject);\n      copyOfTransactions.splice(index, 1, updateObject);\n\n      _this.setState({\n        transactions: copyOfTransactions\n      });\n    };\n\n    _this.state = {\n      transactions: null,\n      currentMonthTransactions: null\n    };\n    return _this;\n  }\n\n  _createClass(UserHome, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchTransactions();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/users/:id/:categoryId\",\n        render: function render(props) {\n          var categoryId = props.match.params.categoryId;\n          var userId = props.match.params.id;\n          var selectedCategory;\n          var userTransactions;\n          var currentUserObject;\n\n          if (_this2.state.transactions) {\n            currentUserObject = _this2.state.transactions.find(function (transactionObject) {\n              return transactionObject.user.id === parseInt(userId);\n            }).user;\n          }\n\n          if (_this2.state.transactions) {\n            selectedCategory = _this2.state.transactions.filter(function (transactionObject) {\n              return transactionObject.category.id === parseInt(categoryId);\n            });\n            selectedCategory = selectedCategory[0].category;\n            userTransactions = _this2.state.transactions.filter(function (transactionObject) {\n              return transactionObject.user.id === parseInt(userId) && transactionObject.category.id === parseInt(categoryId);\n            });\n          }\n\n          return React.createElement(CategoryDetails, {\n            selectedCategory: selectedCategory,\n            transactions: userTransactions,\n            userObject: currentUserObject,\n            addTransaction: _this2.addTransaction,\n            handleDelete: _this2.handleDelete,\n            handleTransactionArrayUpdate: _this2.handleTransactionArrayUpdate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/users/:id\",\n        render: function render(props) {\n          var userId = props.match.params.id;\n          var userTransactions;\n          var currentUserObject;\n\n          if (_this2.state.transactions) {\n            currentUserObject = _this2.state.transactions.find(function (transactionObject) {\n              return transactionObject.user.id === parseInt(userId);\n            }).user;\n          }\n\n          if (_this2.state.transactions) {\n            userTransactions = _this2.state.transactions.filter(function (transactionObject) {\n              return transactionObject.user.id === parseInt(userId);\n            });\n          }\n\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }, React.createElement(Jumbotron, {\n            className: \"Jumbotron\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          }, React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }, \"Welcome Back \", currentUserObject ? currentUserObject.first_name : null, \"!\")), React.createElement(Summary, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          }), React.createElement(CategoryContainer, {\n            transactions: userTransactions,\n            userObject: currentUserObject,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return UserHome;\n}(Component);\n\nexport { UserHome as default };","map":{"version":3,"sources":["/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/src/HomeView/Containers/UserHome.js"],"names":["React","Component","Summary","CategoryContainer","CategoryDetails","Route","Switch","Jumbotron","UserHome","fetchTransactions","userId","props","fetch","then","res","json","currentMonthTransactions","transactions","filter","transactionObject","transactionMonthInt","parseInt","date","split","presentMonth","Date","getMonth","setState","addTransaction","state","handleDelete","id","method","copyOfTransactions","index","indexOf","splice","handleTransactionArrayUpdate","updateObject","categoryId","match","params","selectedCategory","userTransactions","currentUserObject","find","user","category","first_name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport Summary from \"./Summary\"\nimport CategoryContainer from \"./CategoryContainer\"\nimport CategoryDetails from \"../../CategoryView/Containers/CategoryDetails\"\nimport {Route, Switch} from 'react-router-dom'\nimport {Jumbotron} from \"react-bootstrap\"\n\nexport default class UserHome extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      transactions: null,\n      currentMonthTransactions: null\n    }\n  }\n\n  componentDidMount() {\n    this.fetchTransactions()\n  }\n\n  fetchTransactions = () => {\n    let userId = this.props.userId\n    fetch(`http://localhost:3001/users/${userId}`)\n      .then(res => res.json())\n      .then(json => {\n\n        let currentMonthTransactions = json.transactions.filter(transactionObject => {\n          let transactionMonthInt = parseInt(transactionObject.date.split(\"-\")[1])\n          let presentMonth = new Date().getMonth() + 1\n          return presentMonth === transactionMonthInt\n        })\n\n      \n\n        this.setState({\n          transactions: json.transactions\n        })\n      })\n  }\n\n  addTransaction = (transactionObject) => {\n    this.setState({ transactions: [...this.state.transactions, transactionObject] })\n  }\n\n  handleDelete = (transactionObject) => {\n    fetch(`http://localhost:3001/transactions/${transactionObject.id}`, {\n      method: \"DELETE\"\n    })\n\n    let copyOfTransactions = [...this.state.transactions]\n    let index = this.state.transactions.indexOf(transactionObject)\n    copyOfTransactions.splice(index, 1)\n    this.setState({\n      transactions: copyOfTransactions\n    })\n  }\n\n  handleTransactionArrayUpdate = (updateObject, transactionObject) => {\n    let copyOfTransactions = [...this.state.transactions]\n    let index = copyOfTransactions.indexOf(transactionObject)\n    copyOfTransactions.splice(index, 1, updateObject)\n    this.setState({\n      transactions: copyOfTransactions\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Switch>\n        <Route path='/users/:id/:categoryId' render={props => {\n          let categoryId = props.match.params.categoryId\n          let userId = props.match.params.id\n          let selectedCategory;\n          let userTransactions;\n          let currentUserObject;\n\n          if (this.state.transactions) {\n            currentUserObject = this.state.transactions.find(transactionObject => transactionObject.user.id === parseInt(userId)).user\n          }\n\n          if (this.state.transactions) {\n            selectedCategory = this.state.transactions.filter(transactionObject => transactionObject.category.id === parseInt(categoryId))\n            selectedCategory = selectedCategory[0].category\n\n            userTransactions = this.state.transactions.filter(transactionObject => (transactionObject.user.id === parseInt(userId) && transactionObject.category.id === parseInt(categoryId)))\n          }\n\n          return (\n            <CategoryDetails\n              selectedCategory={selectedCategory}\n              transactions={userTransactions}\n              userObject={currentUserObject}\n              addTransaction={this.addTransaction}\n              handleDelete={this.handleDelete}\n              handleTransactionArrayUpdate={this.handleTransactionArrayUpdate}\n            />\n          )\n        }} />\n\n        <Route path='/users/:id' render={props => {\n          let userId = props.match.params.id\n          let userTransactions;\n          let currentUserObject;\n\n          if (this.state.transactions) {\n            currentUserObject = this.state.transactions.find(transactionObject => transactionObject.user.id === parseInt(userId)).user\n          }\n\n          if (this.state.transactions) {\n            userTransactions = this.state.transactions.filter(transactionObject => (transactionObject.user.id === parseInt(userId)))\n          }\n\n          return (\n            <div>\n            <Jumbotron className=\"Jumbotron\">\n              <h1>Welcome Back {currentUserObject ? currentUserObject.first_name : null}!</h1>\n            </Jumbotron>\n\n            <Summary />\n              <CategoryContainer\n                transactions={userTransactions}\n                userObject={currentUserObject}\n              />\n            </div>\n          )\n        }} />\n        </Switch>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}