{"ast":null,"code":"import _classCallCheck from \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/src/HomeView/Containers/UserHome.js\";\nimport React, { Component } from \"react\";\nimport Summary from \"./Summary\";\nimport CategoryContainer from \"./CategoryContainer\";\nimport LineGraph from \"../Components/LineGraph.js\";\nimport { connect } from 'react-redux';\nimport { fetchingTransactions } from '../../redux/actions/transactions.js';\nimport WelcomeJumbotron from '../WelcomeJumbotron.js';\nimport TipsCarousel from '../TipsCarousel.js';\n\nvar UserHome =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserHome, _Component);\n\n  function UserHome() {\n    var _this;\n\n    _classCallCheck(this, UserHome);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserHome).call(this));\n\n    _this.filterCurrentMonthTransactions = function () {\n      return _this.props.transactions.filter(function (transactionObject) {\n        var transactionMonth = parseInt(transactionObject.date.split(\"-\")[1]);\n        var transactionYear = parseInt(transactionObject.date.split(\"-\")[0]);\n        var currentMonth = new Date().getMonth() + 1;\n        var currentYear = new Date().getFullYear();\n        return currentMonth === transactionMonth && currentYear === transactionYear;\n      });\n    };\n\n    _this.filterLastMonthTransactions = function () {\n      return _this.props.transactions.filter(function (transactionObject) {\n        var transactionMonth = parseInt(transactionObject.date.split(\"-\")[1]);\n        var transactionYear = parseInt(transactionObject.date.split(\"-\")[0]);\n        var currentMonth = new Date().getMonth() + 1;\n\n        if (currentMonth === 1) {\n          var lastMonth = 12;\n          var year = new Date().getFullYear() - 1;\n          return lastMonth === transactionMonth && year === transactionYear;\n        } else {\n          var _lastMonth = new Date().getMonth();\n\n          var presentYear = new Date().getFullYear();\n          return _lastMonth === transactionMonth && presentYear === transactionYear;\n        }\n      });\n    };\n\n    _this.filterLastLastMonthTransactions = function () {\n      return _this.props.transactions.filter(function (transactionObject) {\n        var transactionMonthInt = parseInt(transactionObject.date.split(\"-\")[1]);\n        var transactionYearInt = parseInt(transactionObject.date.split(\"-\")[0]);\n        var currentMonth = new Date().getMonth() + 1;\n\n        if (currentMonth === 1) {\n          var lastLastMonth = 11;\n          var year = new Date().getFullYear() - 1;\n          return lastLastMonth === transactionMonthInt && year === transactionYearInt;\n        } else {\n          var _lastLastMonth = new Date().getMonth() - 1;\n\n          var presentYear = new Date().getFullYear();\n          return _lastLastMonth === transactionMonthInt && presentYear === transactionYearInt;\n        }\n      });\n    };\n\n    _this.transactionsReducer = function (arr) {\n      var reducer = function reducer(accumulator, currentValue) {\n        return accumulator + currentValue;\n      };\n\n      var total = arr.reduce(reducer);\n      var floatTotal = Math.floor(total * 100) / 100;\n      return floatTotal;\n    };\n\n    _this.threeMonthData = function () {\n      var threeMonthData = [];\n      var currentMonthTotal;\n      var lastMonthTotal;\n      var lastLastMonthTotal; // CURRENT MONTH TOTAL\n\n      var currentMonthTransactions = _this.filterCurrentMonthTransactions();\n\n      var currentMonthTransactionsAmt = currentMonthTransactions.map(function (transaction) {\n        return transaction.amount;\n      });\n\n      if (!currentMonthTransactionsAmt.length > 0) {\n        currentMonthTotal = 0.00;\n      } else {\n        currentMonthTotal = _this.transactionsReducer(currentMonthTransactionsAmt);\n      } // LAST MONTH TOTAL\n\n\n      var lastMonthTransactions = _this.filterLastMonthTransactions();\n\n      var lastMonthTransactionsAmt = lastMonthTransactions.map(function (transaction) {\n        return transaction.amount;\n      });\n\n      if (!lastMonthTransactionsAmt.length > 0) {\n        lastMonthTotal = 0.00;\n      } else {\n        lastMonthTotal = _this.transactionsReducer(lastMonthTransactionsAmt);\n      } // LAST LAST MONTH TOTAL\n\n\n      var lastLastMonthTransactions = _this.filterLastLastMonthTransactions();\n\n      var lastLastMonthTransactionsAmt = lastLastMonthTransactions.map(function (transaction) {\n        return transaction.amount;\n      });\n\n      if (!lastLastMonthTransactionsAmt.length > 0) {\n        lastLastMonthTotal = 0.00;\n      } else lastLastMonthTotal = _this.transactionsReducer(lastLastMonthTransactionsAmt);\n\n      threeMonthData = [lastLastMonthTotal, lastMonthTotal, currentMonthTotal];\n      return threeMonthData;\n    };\n\n    _this.currentMonth = function () {\n      var index = new Date().getMonth();\n      return _this.state.months[index];\n    };\n\n    _this.lineGraphLabels = function () {\n      var lastThreeMonths = [];\n      var index = new Date().getMonth();\n\n      if (index === 0) {\n        lastThreeMonths.push(_this.state.months[10]);\n        lastThreeMonths.push(_this.state.months[11]);\n        lastThreeMonths.push(_this.state.months[index]);\n      } else if (index === 1) {\n        lastThreeMonths.push(_this.state.months[11]);\n        lastThreeMonths.push(_this.state.months[0]);\n        lastThreeMonths.push(_this.state.months[index]);\n      } else {\n        lastThreeMonths.push(_this.state.months[index - 2]);\n        lastThreeMonths.push(_this.state.months[index - 1]);\n        lastThreeMonths.push(_this.state.months[index]);\n      }\n\n      return lastThreeMonths;\n    };\n\n    _this.state = {\n      months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n    };\n    return _this;\n  }\n\n  _createClass(UserHome, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchingTransactions(this.props.userId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(WelcomeJumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(TipsCarousel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(Summary, {\n        transactions: this.filterCurrentMonthTransactions(),\n        currentMonth: this.currentMonth(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(LineGraph, {\n        label: this.lineGraphLabels(),\n        data: this.threeMonthData(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(CategoryContainer, {\n        transactions: this.filterCurrentMonthTransactions(),\n        userObject: this.props.user,\n        currentMonth: this.currentMonth(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return UserHome;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user,\n    transactions: state.transactions\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchingTransactions: fetchingTransactions\n})(UserHome);","map":{"version":3,"sources":["/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/src/HomeView/Containers/UserHome.js"],"names":["React","Component","Summary","CategoryContainer","LineGraph","connect","fetchingTransactions","WelcomeJumbotron","TipsCarousel","UserHome","filterCurrentMonthTransactions","props","transactions","filter","transactionObject","transactionMonth","parseInt","date","split","transactionYear","currentMonth","Date","getMonth","currentYear","getFullYear","filterLastMonthTransactions","lastMonth","year","presentYear","filterLastLastMonthTransactions","transactionMonthInt","transactionYearInt","lastLastMonth","transactionsReducer","arr","reducer","accumulator","currentValue","total","reduce","floatTotal","Math","floor","threeMonthData","currentMonthTotal","lastMonthTotal","lastLastMonthTotal","currentMonthTransactions","currentMonthTransactionsAmt","map","transaction","amount","length","lastMonthTransactions","lastMonthTransactionsAmt","lastLastMonthTransactions","lastLastMonthTransactionsAmt","index","state","months","lineGraphLabels","lastThreeMonths","push","userId","user","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport Summary from \"./Summary\"\nimport CategoryContainer from \"./CategoryContainer\"\nimport LineGraph from \"../Components/LineGraph.js\"\nimport { connect } from 'react-redux'\nimport { fetchingTransactions } from '../../redux/actions/transactions.js'\nimport WelcomeJumbotron from '../WelcomeJumbotron.js'\nimport TipsCarousel from '../TipsCarousel.js'\n\nclass UserHome extends Component {\n  constructor() {\n    super()\n    this.state={\n      months: ['January','February','March','April','May','June','July','August','September','October','November','December']\n    }\n  }\n\n  componentDidMount() {\n    this.props.fetchingTransactions(this.props.userId)\n  }\n\n  filterCurrentMonthTransactions = () => (\n    this.props.transactions.filter(transactionObject => {\n      let transactionMonth = parseInt(transactionObject.date.split(\"-\")[1])\n      let transactionYear = parseInt(transactionObject.date.split(\"-\")[0])\n      let currentMonth = new Date().getMonth() + 1\n      let currentYear = new Date().getFullYear()\n\n      return (currentMonth === transactionMonth) && (currentYear === transactionYear)\n    })\n  )\n\n  filterLastMonthTransactions = () => (\n    this.props.transactions.filter(transactionObject => {\n      let transactionMonth = parseInt(transactionObject.date.split(\"-\")[1])\n      let transactionYear = parseInt(transactionObject.date.split(\"-\")[0])\n      let currentMonth = new Date().getMonth() + 1\n\n      if (currentMonth === 1) {\n        let lastMonth = 12\n        let year = new Date().getFullYear() - 1\n        return (lastMonth === transactionMonth) && (year === transactionYear)\n      } else {\n        let lastMonth = new Date().getMonth()\n        let presentYear = new Date().getFullYear()\n        return (lastMonth === transactionMonth) && (presentYear === transactionYear)\n      }\n    })\n  )\n\n  filterLastLastMonthTransactions = () => (\n    this.props.transactions.filter(transactionObject => {\n      let transactionMonthInt = parseInt(transactionObject.date.split(\"-\")[1])\n      let transactionYearInt = parseInt(transactionObject.date.split(\"-\")[0])\n      let currentMonth = new Date().getMonth() + 1\n\n      if (currentMonth === 1) {\n        let lastLastMonth = 11\n        let year = new Date().getFullYear() - 1\n        return (lastLastMonth === transactionMonthInt) && (year === transactionYearInt)\n      } else {\n        let lastLastMonth = new Date().getMonth() - 1\n        let presentYear = new Date().getFullYear()\n        return (lastLastMonth === transactionMonthInt) && (presentYear === transactionYearInt)\n      }\n    })\n  )\n\n  // TAKES IN ARRAY OF INTEGERS AND RETURNS SUM\n  transactionsReducer = (arr) => {\n    let reducer = (accumulator, currentValue) => accumulator + currentValue\n    let total = arr.reduce(reducer)\n    let floatTotal = Math.floor(total * 100) / 100\n    return floatTotal\n  }\n\n  threeMonthData = () => {\n    let threeMonthData = []\n    let currentMonthTotal;\n    let lastMonthTotal;\n    let lastLastMonthTotal;\n\n    // CURRENT MONTH TOTAL\n    let currentMonthTransactions = this.filterCurrentMonthTransactions()\n    let currentMonthTransactionsAmt = currentMonthTransactions.map(transaction => transaction.amount)\n\n    if (!currentMonthTransactionsAmt.length > 0) {\n      currentMonthTotal = 0.00\n    } else {\n      currentMonthTotal = this.transactionsReducer(currentMonthTransactionsAmt)\n    }\n\n    // LAST MONTH TOTAL\n    let lastMonthTransactions = this.filterLastMonthTransactions()\n    let lastMonthTransactionsAmt = lastMonthTransactions.map(transaction => transaction.amount)\n\n    if (!lastMonthTransactionsAmt.length > 0) {\n      lastMonthTotal = 0.00\n    } else {\n      lastMonthTotal = this.transactionsReducer(lastMonthTransactionsAmt)\n    }\n\n    // LAST LAST MONTH TOTAL\n    let lastLastMonthTransactions = this.filterLastLastMonthTransactions()\n    let lastLastMonthTransactionsAmt = lastLastMonthTransactions.map(transaction => transaction.amount)\n\n    if (!lastLastMonthTransactionsAmt.length > 0) {\n      lastLastMonthTotal = 0.00\n    } else (\n      lastLastMonthTotal = this.transactionsReducer(lastLastMonthTransactionsAmt)\n    )\n\n    threeMonthData = [lastLastMonthTotal, lastMonthTotal, currentMonthTotal]\n\n    return threeMonthData\n  }\n\n  currentMonth = () => {\n    let index = new Date().getMonth()\n    return this.state.months[index]\n  }\n\n  lineGraphLabels = () => {\n    let lastThreeMonths = []\n    let index = new Date().getMonth()\n    if (index === 0) {\n      lastThreeMonths.push(this.state.months[10])\n      lastThreeMonths.push(this.state.months[11])\n      lastThreeMonths.push(this.state.months[index])\n    } else if (index === 1) {\n      lastThreeMonths.push(this.state.months[11])\n      lastThreeMonths.push(this.state.months[0])\n      lastThreeMonths.push(this.state.months[index])\n    } else {\n      lastThreeMonths.push(this.state.months[index-2])\n      lastThreeMonths.push(this.state.months[index-1])\n      lastThreeMonths.push(this.state.months[index])\n    }\n    return lastThreeMonths\n  }\n\n  render() {\n\n\n    return (\n      <div>\n        <WelcomeJumbotron />\n        <TipsCarousel />\n\n        <Summary\n          transactions={this.filterCurrentMonthTransactions()}\n          currentMonth={this.currentMonth()}\n        />\n        <LineGraph\n          label={this.lineGraphLabels()}\n          data={this.threeMonthData()}\n        />\n        <CategoryContainer\n          transactions={this.filterCurrentMonthTransactions()}\n          userObject={this.props.user}\n          currentMonth={this.currentMonth()}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    transactions: state.transactions\n  }\n}\n\nexport default connect(mapStateToProps, { fetchingTransactions })(UserHome);\n"]},"metadata":{},"sourceType":"module"}