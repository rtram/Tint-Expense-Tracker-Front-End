{"ast":null,"code":"import _toConsumableArray from \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/src/HomeView/Containers/UserHome.js\";\nimport React, { Component } from \"react\";\nimport Summary from \"./Summary\";\nimport CategoryContainer from \"./CategoryContainer\";\nimport CategoryDetails from \"../../CategoryView/Containers/CategoryDetails\";\nimport UserHomeChart from \"../Components/UserHomeChart.js\";\nimport { Route, Switch } from 'react-router-dom';\nimport { Jumbotron, Carousel } from \"react-bootstrap\";\nimport { connect } from 'react-redux';\nimport { fetchingTransactions } from '../../redux/actions/transactions.js';\n\nvar UserHome =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserHome, _Component);\n\n  function UserHome() {\n    var _this;\n\n    _classCallCheck(this, UserHome);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserHome).call(this));\n\n    _this.fetchTransactions = function () {\n      var userId = _this.props.userId;\n      fetch(\"http://localhost:3001/users/\".concat(userId)).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        // FILTERS CURRENT MONTH TRANSACTIONS ==========================================\n        var currentMonthTransactions = json.transactions.filter(function (transactionObject) {\n          var transactionMonthInt = parseInt(transactionObject.date.split(\"-\")[1]);\n          var transactionYearInt = parseInt(transactionObject.date.split(\"-\")[0]);\n          var presentMonth = new Date().getMonth() + 1;\n          var presentYear = new Date().getFullYear();\n          return presentMonth === transactionMonthInt && presentYear === transactionYearInt;\n        });\n\n        _this.setState({\n          transactions: json.transactions,\n          currentMonthTransactions: currentMonthTransactions\n        }); // =============================================================================\n\n\n        _this.setThreeMonthData();\n      });\n    };\n\n    _this.currentMonthTransactions = function () {\n      return _this.props.transactions.filter(function (transactionObject) {\n        var transactionMonthInt = parseInt(transactionObject.date.split(\"-\")[1]);\n        var transactionYearInt = parseInt(transactionObject.date.split(\"-\")[0]);\n        var presentMonth = new Date().getMonth() + 1;\n        var presentYear = new Date().getFullYear();\n        return presentMonth === transactionMonthInt && presentYear === transactionYearInt;\n      });\n    };\n\n    _this.setThreeMonthData = function () {\n      var threeMonthData = [];\n      var currentMonthTotal;\n      var lastMonthTotal;\n      var lastLastMonthTotal; // CURRENT MONTH TOTAL\n\n      if (_this.state.transactions) {\n        var currentMonthTransactions = _this.currentMonthTransactions;\n        debugger;\n        var currentMonthTransactionsAmt = currentMonthTransactions.map(function (transaction) {\n          return transaction.amount;\n        });\n\n        if (currentMonthTransactionsAmt.length > 0) {\n          var reducer = function reducer(accumulator, currentValue) {\n            return accumulator + currentValue;\n          };\n\n          currentMonthTotal = currentMonthTransactionsAmt.reduce(reducer);\n          currentMonthTotal = Math.floor(currentMonthTotal * 100) / 100;\n        }\n      } // LAST MONTH TOTAL\n\n\n      if (_this.state.transactions) {\n        var lastMonthTransactions = _this.state.transactions.filter(function (transactionObject) {\n          var transactionMonthInt = parseInt(transactionObject.date.split(\"-\")[1]);\n          var transactionYearInt = parseInt(transactionObject.date.split(\"-\")[0]);\n          var currentMonth = new Date().getMonth() + 1;\n\n          if (currentMonth === 1) {\n            var lastMonth = 12;\n            var year = new Date().getFullYear() - 1;\n            return lastMonth === transactionMonthInt && year === transactionYearInt;\n          } else {\n            var _lastMonth = new Date().getMonth();\n\n            var presentYear = new Date().getFullYear();\n            return _lastMonth === transactionMonthInt && presentYear === transactionYearInt;\n          }\n        });\n\n        var lastMonthTransactionsAmt = lastMonthTransactions.map(function (transaction) {\n          return transaction.amount;\n        });\n\n        if (lastMonthTransactionsAmt.length > 0) {\n          var _reducer = function _reducer(accumulator, currentValue) {\n            return accumulator + currentValue;\n          };\n\n          lastMonthTotal = lastMonthTransactionsAmt.reduce(_reducer);\n          lastMonthTotal = Math.floor(lastMonthTotal * 100) / 100;\n        } else {\n          lastMonthTotal = 0.00;\n        }\n      } // LAST LAST MONTH TOTAL\n\n\n      if (_this.state.transactions) {\n        var lastLastMonthTransactions = _this.state.transactions.filter(function (transactionObject) {\n          var transactionMonthInt = parseInt(transactionObject.date.split(\"-\")[1]);\n          var transactionYearInt = parseInt(transactionObject.date.split(\"-\")[0]);\n          var currentMonth = new Date().getMonth() + 1;\n\n          if (currentMonth === 1) {\n            var lastLastMonth = 11;\n            var year = new Date().getFullYear() - 1;\n            return lastLastMonth === transactionMonthInt && year === transactionYearInt;\n          } else {\n            var _lastLastMonth = new Date().getMonth() - 1;\n\n            var presentYear = new Date().getFullYear();\n            return _lastLastMonth === transactionMonthInt && presentYear === transactionYearInt;\n          }\n        });\n\n        var lastLastMonthTransactionsAmt = lastLastMonthTransactions.map(function (transaction) {\n          return transaction.amount;\n        });\n\n        if (lastLastMonthTransactionsAmt.length > 0) {\n          var _reducer2 = function _reducer2(accumulator, currentValue) {\n            return accumulator + currentValue;\n          };\n\n          lastLastMonthTotal = lastLastMonthTransactionsAmt.reduce(_reducer2);\n          lastLastMonthTotal = Math.floor(lastLastMonthTotal * 100) / 100;\n        } else lastLastMonthTotal = 0.00;\n      }\n\n      threeMonthData = [lastLastMonthTotal, lastMonthTotal, currentMonthTotal];\n\n      _this.setState({\n        threeMonthData: threeMonthData\n      });\n    };\n\n    _this.addTransaction = function (transactionObject) {\n      var allTransactions = [].concat(_toConsumableArray(_this.state.transactions), [transactionObject]); // FILTERS CURRENT MONTH TRANSACTIONS ==========================================\n\n      var currentMonthTransactions = allTransactions.filter(function (transactionObject) {\n        var transactionMonthInt = parseInt(transactionObject.date.split(\"-\")[1]);\n        var transactionYearInt = parseInt(transactionObject.date.split(\"-\")[0]);\n        var presentMonth = new Date().getMonth() + 1;\n        var presentYear = new Date().getFullYear();\n        return presentMonth === transactionMonthInt && presentYear === transactionYearInt;\n      }); //=============================================================================\n\n      _this.setState({\n        transactions: allTransactions,\n        currentMonthTransactions: currentMonthTransactions\n      }, _this.setThreeMonthData);\n    };\n\n    _this.handleDelete = function (transactionObject) {\n      fetch(\"http://localhost:3001/transactions/\".concat(transactionObject.id), {\n        method: \"DELETE\"\n      }); // DELETING FROM THIS.STATE.TRANSACTIONS\n\n      var copyOfAllTransactions = _toConsumableArray(_this.state.transactions);\n\n      var indexOfAllTransactions = _this.state.transactions.indexOf(transactionObject);\n\n      copyOfAllTransactions.splice(indexOfAllTransactions, 1);\n\n      _this.setState({\n        transactions: copyOfAllTransactions\n      }); // DELETING FROM THIS.STATE.CURRENTMONTHTRANSACTIONS\n\n\n      var copyOfCurrentMonthTransactions = _toConsumableArray(_this.state.currentMonthTransactions);\n\n      var indexOfCurrentMonthTransactions = _this.state.currentMonthTransactions.indexOf(transactionObject);\n\n      copyOfCurrentMonthTransactions.splice(indexOfCurrentMonthTransactions, 1);\n\n      _this.setState({\n        currentMonthTransactions: copyOfCurrentMonthTransactions\n      }, _this.setThreeMonthData);\n    };\n\n    _this.handleTransactionArrayUpdate = function (updateObject, transactionObject) {\n      var copyOfTransactions = _toConsumableArray(_this.state.transactions);\n\n      var index = copyOfTransactions.indexOf(transactionObject);\n      copyOfTransactions.splice(index, 1, updateObject); // FILTERS CURRENT MONTH TRANSACTIONS ==========================================\n\n      var currentMonthTransactions = copyOfTransactions.filter(function (transactionObject) {\n        var transactionMonthInt = parseInt(transactionObject.date.split(\"-\")[1]);\n        var transactionYearInt = parseInt(transactionObject.date.split(\"-\")[0]);\n        var presentMonth = new Date().getMonth() + 1;\n        var presentYear = new Date().getFullYear();\n        return presentMonth === transactionMonthInt && presentYear === transactionYearInt;\n      }); // =============================================================================\n\n      _this.setState({\n        transactions: copyOfTransactions,\n        currentMonthTransactions: currentMonthTransactions\n      }, _this.setThreeMonthData);\n    };\n\n    _this.state = {\n      transactions: null,\n      currentMonthTransactions: null,\n      threeMonthData: null\n    };\n    return _this;\n  }\n\n  _createClass(UserHome, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchingTransactions(this.props.userId);\n      this.fetchTransactions();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // debugger\n      //GET CURRENT MONTH=============================================================\n      var months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n      var currentMonthGetter = function currentMonthGetter() {\n        var index = new Date().getMonth();\n        return months[index];\n      };\n\n      var currentMonth = currentMonthGetter(); //CHART METHODS=================================================================\n\n      var labelGetter = function labelGetter() {\n        var lastThreeMonths = [];\n        var index = new Date().getMonth();\n\n        if (index === 0) {\n          lastThreeMonths.push(months[10]);\n          lastThreeMonths.push(months[11]);\n          lastThreeMonths.push(months[index]);\n        } else if (index === 1) {\n          lastThreeMonths.push(months[11]);\n          lastThreeMonths.push(months[0]);\n          lastThreeMonths.push(months[index]);\n        } else {\n          lastThreeMonths.push(months[index - 2]);\n          lastThreeMonths.push(months[index - 1]);\n          lastThreeMonths.push(months[index]);\n        }\n\n        return lastThreeMonths;\n      }; //==============================================================================\n\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/users/:id/:categoryId\",\n        render: function render(props) {\n          var categoryId = props.match.params.categoryId;\n          var userId = props.match.params.id;\n          var selectedCategory;\n          var userCurrentTransactions;\n          var currentUserObject;\n\n          if (_this2.state.transactions) {\n            currentUserObject = _this2.state.transactions.find(function (transactionObject) {\n              return transactionObject.user.id === parseInt(userId);\n            }).user;\n          }\n\n          if (_this2.state.transactions) {\n            selectedCategory = _this2.state.transactions.filter(function (transactionObject) {\n              return transactionObject.category.id === parseInt(categoryId);\n            });\n            selectedCategory = selectedCategory[0].category;\n            userCurrentTransactions = _this2.state.currentMonthTransactions.filter(function (transactionObject) {\n              return transactionObject.category.id === parseInt(categoryId);\n            });\n          }\n\n          return React.createElement(CategoryDetails, {\n            selectedCategory: selectedCategory,\n            transactions: userCurrentTransactions,\n            userObject: currentUserObject,\n            addTransaction: _this2.addTransaction,\n            handleDelete: _this2.handleDelete,\n            handleTransactionArrayUpdate: _this2.handleTransactionArrayUpdate,\n            currentMonth: currentMonth,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 269\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/users/:id\",\n        render: function render(props) {\n          var userId = props.match.params.id;\n          var currentUserObject;\n\n          if (_this2.state.transactions) {\n            currentUserObject = _this2.state.transactions.find(function (transactionObject) {\n              return transactionObject.user.id === parseInt(userId);\n            }).user;\n          }\n\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 290\n            },\n            __self: this\n          }, React.createElement(Jumbotron, {\n            className: \"Jumbotron\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 291\n            },\n            __self: this\n          }, React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 292\n            },\n            __self: this\n          }, \"Welcome Back \", currentUserObject ? currentUserObject.first_name : null, \"!\")), React.createElement(Carousel, {\n            className: \"Carousel\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 295\n            },\n            __self: this\n          }, React.createElement(Carousel.Item, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 296\n            },\n            __self: this\n          }, React.createElement(\"h2\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 297\n            },\n            __self: this\n          }, \"Tip #1\"), React.createElement(\"p\", {\n            id: \"smaller-font\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 298\n            },\n            __self: this\n          }, \"Check your credit score\"), React.createElement(\"p\", {\n            id: \"smaller-font1\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 299\n            },\n            __self: this\n          }, \"Your credit score is a numeric representation of your credit that informs lenders about what kind of borrower you are.\"), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 300\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 301\n            },\n            __self: this\n          })), React.createElement(Carousel.Item, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 303\n            },\n            __self: this\n          }, React.createElement(\"h2\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 304\n            },\n            __self: this\n          }, \"Tip #2\"), React.createElement(\"p\", {\n            id: \"smaller-font\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 305\n            },\n            __self: this\n          }, \"Pay more than the minimum on your credit card\"), React.createElement(\"p\", {\n            id: \"smaller-font1\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 306\n            },\n            __self: this\n          }, \"When it comes to paying your credit card, settling for the bare minimum makes you a slave to interest.\"), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 307\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 308\n            },\n            __self: this\n          })), React.createElement(Carousel.Item, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 310\n            },\n            __self: this\n          }, React.createElement(\"h2\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 311\n            },\n            __self: this\n          }, \"Tip #3\"), React.createElement(\"p\", {\n            id: \"smaller-font\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 312\n            },\n            __self: this\n          }, \"Up your retirement contribution\"), React.createElement(\"p\", {\n            id: \"smaller-font1\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 313\n            },\n            __self: this\n          }, \"Compound interest can become your best friend if you start saving now.\"), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 314\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 315\n            },\n            __self: this\n          })), React.createElement(Carousel.Item, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 317\n            },\n            __self: this\n          }, React.createElement(\"h2\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 318\n            },\n            __self: this\n          }, \"Tip #4\"), React.createElement(\"p\", {\n            id: \"smaller-font\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 319\n            },\n            __self: this\n          }, \"Sign up for autopay on your debt\"), React.createElement(\"p\", {\n            id: \"smaller-font1\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 320\n            },\n            __self: this\n          }, \"Missing a payment can hurt your credit score and tack on unnecessary late fees.\"), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 321\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 322\n            },\n            __self: this\n          }))), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 327\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 328\n            },\n            __self: this\n          }), React.createElement(Summary, {\n            transactions: _this2.state.currentMonthTransactions,\n            currentMonth: currentMonth,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 330\n            },\n            __self: this\n          }), React.createElement(UserHomeChart, {\n            label: labelGetter(),\n            data: _this2.state.threeMonthData,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 334\n            },\n            __self: this\n          }), React.createElement(CategoryContainer, {\n            transactions: _this2.state.currentMonthTransactions,\n            userObject: currentUserObject,\n            currentMonth: currentMonth,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 338\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return UserHome;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    transactions: state.transactions\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchingTransactions: fetchingTransactions\n})(UserHome);","map":{"version":3,"sources":["/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/src/HomeView/Containers/UserHome.js"],"names":["React","Component","Summary","CategoryContainer","CategoryDetails","UserHomeChart","Route","Switch","Jumbotron","Carousel","connect","fetchingTransactions","UserHome","fetchTransactions","userId","props","fetch","then","res","json","currentMonthTransactions","transactions","filter","transactionObject","transactionMonthInt","parseInt","date","split","transactionYearInt","presentMonth","Date","getMonth","presentYear","getFullYear","setState","setThreeMonthData","threeMonthData","currentMonthTotal","lastMonthTotal","lastLastMonthTotal","state","currentMonthTransactionsAmt","map","transaction","amount","length","reducer","accumulator","currentValue","reduce","Math","floor","lastMonthTransactions","currentMonth","lastMonth","year","lastMonthTransactionsAmt","lastLastMonthTransactions","lastLastMonth","lastLastMonthTransactionsAmt","addTransaction","allTransactions","handleDelete","id","method","copyOfAllTransactions","indexOfAllTransactions","indexOf","splice","copyOfCurrentMonthTransactions","indexOfCurrentMonthTransactions","handleTransactionArrayUpdate","updateObject","copyOfTransactions","index","months","currentMonthGetter","labelGetter","lastThreeMonths","push","categoryId","match","params","selectedCategory","userCurrentTransactions","currentUserObject","find","user","category","first_name","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport Summary from \"./Summary\"\nimport CategoryContainer from \"./CategoryContainer\"\nimport CategoryDetails from \"../../CategoryView/Containers/CategoryDetails\"\nimport UserHomeChart from \"../Components/UserHomeChart.js\"\nimport {Route, Switch} from 'react-router-dom'\nimport {Jumbotron, Carousel} from \"react-bootstrap\"\nimport { connect } from 'react-redux'\nimport { fetchingTransactions } from '../../redux/actions/transactions.js'\n\nclass UserHome extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      transactions: null,\n      currentMonthTransactions: null,\n      threeMonthData: null\n    }\n  }\n\n  componentDidMount() {\n    this.props.fetchingTransactions(this.props.userId)\n    this.fetchTransactions()\n  }\n\n  fetchTransactions = () => {\n    let userId = this.props.userId\n    fetch(`http://localhost:3001/users/${userId}`)\n      .then(res => res.json())\n      .then(json => {\n\n// FILTERS CURRENT MONTH TRANSACTIONS ==========================================\n        let currentMonthTransactions = json.transactions.filter(transactionObject => {\n          let transactionMonthInt = parseInt(transactionObject.date.split(\"-\")[1])\n          let transactionYearInt = parseInt(transactionObject.date.split(\"-\")[0])\n          let presentMonth = new Date().getMonth() + 1\n          let presentYear = new Date().getFullYear()\n\n          return (presentMonth === transactionMonthInt) && (presentYear === transactionYearInt)\n        })\n\n        this.setState({\n          transactions: json.transactions,\n          currentMonthTransactions: currentMonthTransactions\n        })\n// =============================================================================\n        this.setThreeMonthData()\n      })\n  }\n  currentMonthTransactions = () => (\n    this.props.transactions.filter(transactionObject => {\n      let transactionMonthInt = parseInt(transactionObject.date.split(\"-\")[1])\n      let transactionYearInt = parseInt(transactionObject.date.split(\"-\")[0])\n      let presentMonth = new Date().getMonth() + 1\n      let presentYear = new Date().getFullYear()\n\n      return (presentMonth === transactionMonthInt) && (presentYear === transactionYearInt)\n    })\n  )\n\n  setThreeMonthData = () => {\n    let threeMonthData = []\n    let currentMonthTotal;\n    let lastMonthTotal;\n    let lastLastMonthTotal;\n\n\n    // CURRENT MONTH TOTAL\n    if (this.state.transactions) {\n      let currentMonthTransactions = this.currentMonthTransactions\n      debugger\n\n      let currentMonthTransactionsAmt = currentMonthTransactions.map(transaction => transaction.amount)\n\n      if (currentMonthTransactionsAmt.length > 0) {\n        let reducer = (accumulator, currentValue) => accumulator + currentValue\n        currentMonthTotal = currentMonthTransactionsAmt.reduce(reducer)\n        currentMonthTotal = Math.floor(currentMonthTotal * 100) / 100\n      }\n    }\n\n    // LAST MONTH TOTAL\n    if (this.state.transactions) {\n      let lastMonthTransactions = this.state.transactions.filter(transactionObject => {\n        let transactionMonthInt = parseInt(transactionObject.date.split(\"-\")[1])\n        let transactionYearInt = parseInt(transactionObject.date.split(\"-\")[0])\n        let currentMonth = new Date().getMonth() + 1\n\n        if (currentMonth === 1) {\n          let lastMonth = 12\n          let year = new Date().getFullYear() - 1\n          return (lastMonth === transactionMonthInt) && (year === transactionYearInt)\n        } else {\n          let lastMonth = new Date().getMonth()\n          let presentYear = new Date().getFullYear()\n          return (lastMonth === transactionMonthInt) && (presentYear === transactionYearInt)\n        }\n      })\n      let lastMonthTransactionsAmt = lastMonthTransactions.map(transaction => transaction.amount)\n\n      if (lastMonthTransactionsAmt.length > 0) {\n        let reducer = (accumulator, currentValue) => accumulator + currentValue\n        lastMonthTotal = lastMonthTransactionsAmt.reduce(reducer)\n        lastMonthTotal = Math.floor(lastMonthTotal * 100) / 100\n      } else {\n        lastMonthTotal = 0.00\n      }\n\n    }\n\n    // LAST LAST MONTH TOTAL\n    if (this.state.transactions) {\n      let lastLastMonthTransactions = this.state.transactions.filter(transactionObject => {\n        let transactionMonthInt = parseInt(transactionObject.date.split(\"-\")[1])\n        let transactionYearInt = parseInt(transactionObject.date.split(\"-\")[0])\n        let currentMonth = new Date().getMonth() + 1\n\n        if (currentMonth === 1) {\n          let lastLastMonth = 11\n          let year = new Date().getFullYear() - 1\n          return (lastLastMonth === transactionMonthInt) && (year === transactionYearInt)\n        } else {\n          let lastLastMonth = new Date().getMonth() - 1\n          let presentYear = new Date().getFullYear()\n          return (lastLastMonth === transactionMonthInt) && (presentYear === transactionYearInt)\n        }\n      })\n      let lastLastMonthTransactionsAmt = lastLastMonthTransactions.map(transaction => transaction.amount)\n\n      if (lastLastMonthTransactionsAmt.length > 0) {\n        let reducer = (accumulator, currentValue) => accumulator + currentValue\n        lastLastMonthTotal = lastLastMonthTransactionsAmt.reduce(reducer)\n        lastLastMonthTotal = Math.floor(lastLastMonthTotal * 100) / 100\n      } else (\n        lastLastMonthTotal = 0.00\n      )\n    }\n\n    threeMonthData = [lastLastMonthTotal, lastMonthTotal, currentMonthTotal]\n\n    this.setState({\n      threeMonthData: threeMonthData\n    })\n  }\n\n  addTransaction = (transactionObject) => {\n    let allTransactions = [...this.state.transactions, transactionObject]\n\n// FILTERS CURRENT MONTH TRANSACTIONS ==========================================\n    let currentMonthTransactions = allTransactions.filter(transactionObject => {\n      let transactionMonthInt = parseInt(transactionObject.date.split(\"-\")[1])\n      let transactionYearInt = parseInt(transactionObject.date.split(\"-\")[0])\n      let presentMonth = new Date().getMonth() + 1\n      let presentYear = new Date().getFullYear()\n      return (presentMonth === transactionMonthInt) && (presentYear === transactionYearInt)\n    })\n//=============================================================================\n    this.setState({\n      transactions: allTransactions,\n      currentMonthTransactions: currentMonthTransactions\n    },\n    this.setThreeMonthData\n    )\n  }\n\n  handleDelete = (transactionObject) => {\n    fetch(`http://localhost:3001/transactions/${transactionObject.id}`, {\n      method: \"DELETE\"\n    })\n\n    // DELETING FROM THIS.STATE.TRANSACTIONS\n    let copyOfAllTransactions = [...this.state.transactions]\n    let indexOfAllTransactions = this.state.transactions.indexOf(transactionObject)\n    copyOfAllTransactions.splice(indexOfAllTransactions, 1)\n    this.setState({\n      transactions: copyOfAllTransactions\n    })\n\n    // DELETING FROM THIS.STATE.CURRENTMONTHTRANSACTIONS\n    let copyOfCurrentMonthTransactions = [...this.state.currentMonthTransactions]\n    let indexOfCurrentMonthTransactions = this.state.currentMonthTransactions.indexOf(transactionObject)\n    copyOfCurrentMonthTransactions.splice(indexOfCurrentMonthTransactions, 1)\n    this.setState({\n      currentMonthTransactions: copyOfCurrentMonthTransactions\n    }, this.setThreeMonthData\n    )\n  }\n\n  handleTransactionArrayUpdate = (updateObject, transactionObject) => {\n    let copyOfTransactions = [...this.state.transactions]\n    let index = copyOfTransactions.indexOf(transactionObject)\n    copyOfTransactions.splice(index, 1, updateObject)\n\n// FILTERS CURRENT MONTH TRANSACTIONS ==========================================\n    let currentMonthTransactions = copyOfTransactions.filter(transactionObject => {\n      let transactionMonthInt = parseInt(transactionObject.date.split(\"-\")[1])\n      let transactionYearInt = parseInt(transactionObject.date.split(\"-\")[0])\n      let presentMonth = new Date().getMonth() + 1\n      let presentYear = new Date().getFullYear()\n      return (presentMonth === transactionMonthInt) && (presentYear === transactionYearInt)\n    })\n// =============================================================================\n\n    this.setState({\n      transactions: copyOfTransactions,\n      currentMonthTransactions: currentMonthTransactions\n    }, this.setThreeMonthData\n    )\n  }\n\n  render() {\n    // debugger\n\n//GET CURRENT MONTH=============================================================\n    let months    =['January','February','March','April','May','June','July','August','September','October','November','December']\n\n    let currentMonthGetter = () => {\n      let index = new Date().getMonth()\n      return months[index]\n    }\n\n    let currentMonth = currentMonthGetter()\n\n//CHART METHODS=================================================================\n    let labelGetter = () => {\n      let lastThreeMonths = []\n      let index = new Date().getMonth()\n      if (index === 0) {\n        lastThreeMonths.push(months[10])\n        lastThreeMonths.push(months[11])\n        lastThreeMonths.push(months[index])\n      } else if (index === 1) {\n        lastThreeMonths.push(months[11])\n        lastThreeMonths.push(months[0])\n        lastThreeMonths.push(months[index])\n      } else {\n        lastThreeMonths.push(months[index-2])\n        lastThreeMonths.push(months[index-1])\n        lastThreeMonths.push(months[index])\n      }\n      return lastThreeMonths\n    }\n\n//==============================================================================\n\n    return (\n      <div>\n        <Switch>\n        <Route path='/users/:id/:categoryId' render={props => {\n          let categoryId = props.match.params.categoryId\n          let userId = props.match.params.id\n          let selectedCategory;\n          let userCurrentTransactions;\n          let currentUserObject;\n\n          if (this.state.transactions) {\n            currentUserObject = this.state.transactions.find(transactionObject => transactionObject.user.id === parseInt(userId)).user\n          }\n\n          if (this.state.transactions) {\n            selectedCategory = this.state.transactions.filter(transactionObject => transactionObject.category.id === parseInt(categoryId))\n            selectedCategory = selectedCategory[0].category\n\n            userCurrentTransactions = this.state.currentMonthTransactions.filter(transactionObject => (transactionObject.category.id === parseInt(categoryId)))\n          }\n\n          return (\n            <CategoryDetails\n              selectedCategory={selectedCategory}\n              transactions={userCurrentTransactions}\n              userObject={currentUserObject}\n              addTransaction={this.addTransaction}\n              handleDelete={this.handleDelete}\n              handleTransactionArrayUpdate={this.handleTransactionArrayUpdate}\n              currentMonth={currentMonth}\n            />\n          )\n        }} />\n\n        <Route path='/users/:id' render={props => {\n          let userId = props.match.params.id\n          let currentUserObject;\n\n          if (this.state.transactions) {\n            currentUserObject = this.state.transactions.find(transactionObject => transactionObject.user.id === parseInt(userId)).user\n          }\n\n          return (\n            <div>\n            <Jumbotron className=\"Jumbotron\">\n              <h1>Welcome Back {currentUserObject ? currentUserObject.first_name : null}!</h1>\n            </Jumbotron>\n\n            <Carousel className=\"Carousel\">\n              <Carousel.Item>\n                <h2>Tip #1</h2>\n                <p id=\"smaller-font\" >Check your credit score</p>\n                <p id=\"smaller-font1\" >Your credit score is a numeric representation of your credit that informs lenders about what kind of borrower you are.</p>\n                <br/>\n                <br/>\n              </Carousel.Item>\n              <Carousel.Item>\n                <h2>Tip #2</h2>\n                <p id=\"smaller-font\">Pay more than the minimum on your credit card</p>\n                <p id=\"smaller-font1\">When it comes to paying your credit card, settling for the bare minimum makes you a slave to interest.</p>\n                <br/>\n                <br/>\n              </Carousel.Item>\n              <Carousel.Item>\n                <h2>Tip #3</h2>\n                <p id=\"smaller-font\">Up your retirement contribution</p>\n                <p id=\"smaller-font1\">Compound interest can become your best friend if you start saving now.</p>\n                <br/>\n                <br/>\n              </Carousel.Item>\n              <Carousel.Item>\n                <h2>Tip #4</h2>\n                <p id=\"smaller-font\">Sign up for autopay on your debt</p>\n                <p id=\"smaller-font1\">Missing a payment can hurt your credit score and tack on unnecessary late fees.</p>\n                <br/>\n                <br/>\n              </Carousel.Item>\n\n            </Carousel>\n\n            <br/>\n            <br/>\n\n            <Summary\n              transactions={this.state.currentMonthTransactions}\n              currentMonth={currentMonth}\n            />\n            <UserHomeChart\n              label={labelGetter()}\n              data={this.state.threeMonthData}\n            />\n            <CategoryContainer\n              transactions={this.state.currentMonthTransactions}\n              userObject={currentUserObject}\n              currentMonth={currentMonth}\n            />\n            </div>\n          )\n        }} />\n        </Switch>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    transactions: state.transactions\n  }\n}\n\nexport default connect(mapStateToProps, { fetchingTransactions })(UserHome);\n"]},"metadata":{},"sourceType":"module"}