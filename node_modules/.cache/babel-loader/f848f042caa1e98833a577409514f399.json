{"ast":null,"code":"import _toConsumableArray from \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/src/HomeView/Containers/UserHome.js\";\nimport React, { Component } from \"react\";\nimport Summary from \"./Summary\";\nimport CategoryContainer from \"./CategoryContainer\";\nimport CategoryDetails from \"../../CategoryView/Containers/CategoryDetails\";\nimport UserHomeChart from \"../Components/UserHomeChart.js\";\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchingTransactions } from '../../redux/actions/transactions.js';\nimport WelcomeJumbotron from '../WelcomeJumbotron.js';\nimport TipsCarousel from '../TipsCarousel.js';\n\nvar UserHome =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserHome, _Component);\n\n  function UserHome() {\n    var _this;\n\n    _classCallCheck(this, UserHome);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserHome).call(this));\n\n    _this.filterCurrentMonthTransactions = function () {\n      return _this.props.transactions.filter(function (transactionObject) {\n        var transactionMonth = parseInt(transactionObject.date.split(\"-\")[1]);\n        var transactionYear = parseInt(transactionObject.date.split(\"-\")[0]);\n        var currentMonth = new Date().getMonth() + 1;\n        var currentYear = new Date().getFullYear();\n        return currentMonth === transactionMonth && currentYear === transactionYear;\n      });\n    };\n\n    _this.filterLastMonthTransactions = function () {\n      return _this.props.transactions.filter(function (transactionObject) {\n        var transactionMonth = parseInt(transactionObject.date.split(\"-\")[1]);\n        var transactionYear = parseInt(transactionObject.date.split(\"-\")[0]);\n        var currentMonth = new Date().getMonth() + 1;\n\n        if (currentMonth === 1) {\n          var lastMonth = 12;\n          var year = new Date().getFullYear() - 1;\n          return lastMonth === transactionMonth && year === transactionYear;\n        } else {\n          var _lastMonth = new Date().getMonth();\n\n          var presentYear = new Date().getFullYear();\n          return _lastMonth === transactionMonth && presentYear === transactionYear;\n        }\n      });\n    };\n\n    _this.filterLastLastMonthTransactions = function () {\n      return _this.props.transactions.filter(function (transactionObject) {\n        var transactionMonthInt = parseInt(transactionObject.date.split(\"-\")[1]);\n        var transactionYearInt = parseInt(transactionObject.date.split(\"-\")[0]);\n        var currentMonth = new Date().getMonth() + 1;\n\n        if (currentMonth === 1) {\n          var lastLastMonth = 11;\n          var year = new Date().getFullYear() - 1;\n          return lastLastMonth === transactionMonthInt && year === transactionYearInt;\n        } else {\n          var _lastLastMonth = new Date().getMonth() - 1;\n\n          var presentYear = new Date().getFullYear();\n          return _lastLastMonth === transactionMonthInt && presentYear === transactionYearInt;\n        }\n      });\n    };\n\n    _this.transactionsReducer = function (arr) {\n      var reducer = function reducer(accumulator, currentValue) {\n        return accumulator + currentValue;\n      };\n\n      var total = arr.reduce(reducer);\n      var floatTotal = Math.floor(total * 100) / 100;\n      return floatTotal;\n    };\n\n    _this.threeMonthData = function () {\n      var threeMonthData = [];\n      var currentMonthTotal;\n      var lastMonthTotal;\n      var lastLastMonthTotal; // CURRENT MONTH TOTAL\n\n      var currentMonthTransactions = _this.filterCurrentMonthTransactions();\n\n      var currentMonthTransactionsAmt = currentMonthTransactions.map(function (transaction) {\n        return transaction.amount;\n      });\n\n      if (!currentMonthTransactionsAmt.length > 0) {\n        currentMonthTotal = 0.00;\n      } else {\n        currentMonthTotal = _this.transactionsReducer(currentMonthTransactionsAmt);\n      } // LAST MONTH TOTAL\n\n\n      var lastMonthTransactions = _this.filterLastMonthTransactions();\n\n      var lastMonthTransactionsAmt = lastMonthTransactions.map(function (transaction) {\n        return transaction.amount;\n      });\n\n      if (!lastMonthTransactionsAmt.length > 0) {\n        lastMonthTotal = 0.00;\n      } else {\n        lastMonthTotal = _this.transactionsReducer(lastMonthTransactionsAmt);\n      } // LAST LAST MONTH TOTAL\n\n\n      var lastLastMonthTransactions = _this.filterLastLastMonthTransactions();\n\n      var lastLastMonthTransactionsAmt = lastLastMonthTransactions.map(function (transaction) {\n        return transaction.amount;\n      });\n\n      if (!lastLastMonthTransactionsAmt.length > 0) {\n        lastLastMonthTotal = 0.00;\n      } else lastLastMonthTotal = _this.transactionsReducer(lastLastMonthTransactionsAmt);\n\n      threeMonthData = [lastLastMonthTotal, lastMonthTotal, currentMonthTotal];\n      return threeMonthData;\n    };\n\n    _this.addTransaction = function (transactionObject) {\n      var allTransactions = [].concat(_toConsumableArray(_this.state.transactions), [transactionObject]); // FILTERS CURRENT MONTH TRANSACTIONS ==========================================\n\n      var currentMonthTransactions = allTransactions.filter(function (transactionObject) {\n        var transactionMonthInt = parseInt(transactionObject.date.split(\"-\")[1]);\n        var transactionYearInt = parseInt(transactionObject.date.split(\"-\")[0]);\n        var presentMonth = new Date().getMonth() + 1;\n        var presentYear = new Date().getFullYear();\n        return presentMonth === transactionMonthInt && presentYear === transactionYearInt;\n      }); //=============================================================================\n\n      _this.setState({\n        transactions: allTransactions,\n        currentMonthTransactions: currentMonthTransactions\n      }, _this.setThreeMonthData);\n    };\n\n    _this.handleDelete = function (transactionObject) {\n      fetch(\"http://localhost:3001/transactions/\".concat(transactionObject.id), {\n        method: \"DELETE\"\n      }); // DELETING FROM THIS.STATE.TRANSACTIONS\n\n      var copyOfAllTransactions = _toConsumableArray(_this.state.transactions);\n\n      var indexOfAllTransactions = _this.state.transactions.indexOf(transactionObject);\n\n      copyOfAllTransactions.splice(indexOfAllTransactions, 1);\n\n      _this.setState({\n        transactions: copyOfAllTransactions\n      }); // DELETING FROM THIS.STATE.CURRENTMONTHTRANSACTIONS\n\n\n      var copyOfCurrentMonthTransactions = _toConsumableArray(_this.filterCurrentMonthTransactions());\n\n      var indexOfCurrentMonthTransactions = _this.filterCurrentMonthTransactions().indexOf(transactionObject);\n\n      copyOfCurrentMonthTransactions.splice(indexOfCurrentMonthTransactions, 1);\n\n      _this.setState({\n        currentMonthTransactions: copyOfCurrentMonthTransactions\n      }, _this.setThreeMonthData);\n    };\n\n    _this.handleTransactionArrayUpdate = function (updateObject, transactionObject) {\n      var copyOfTransactions = _toConsumableArray(_this.state.transactions);\n\n      var index = copyOfTransactions.indexOf(transactionObject);\n      copyOfTransactions.splice(index, 1, updateObject); // FILTERS CURRENT MONTH TRANSACTIONS ==========================================\n\n      var currentMonthTransactions = copyOfTransactions.filter(function (transactionObject) {\n        var transactionMonthInt = parseInt(transactionObject.date.split(\"-\")[1]);\n        var transactionYearInt = parseInt(transactionObject.date.split(\"-\")[0]);\n        var presentMonth = new Date().getMonth() + 1;\n        var presentYear = new Date().getFullYear();\n        return presentMonth === transactionMonthInt && presentYear === transactionYearInt;\n      }); // =============================================================================\n\n      _this.setState({\n        transactions: copyOfTransactions,\n        currentMonthTransactions: currentMonthTransactions\n      }, _this.setThreeMonthData);\n    };\n\n    _this.currentMonth = function () {\n      var index = new Date().getMonth();\n      return _this.state.months[index];\n    };\n\n    _this.lineGraphLabels = function () {\n      var lastThreeMonths = [];\n      var index = new Date().getMonth();\n\n      if (index === 0) {\n        lastThreeMonths.push(_this.state.months[10]);\n        lastThreeMonths.push(_this.state.months[11]);\n        lastThreeMonths.push(_this.state.months[index]);\n      } else if (index === 1) {\n        lastThreeMonths.push(_this.state.months[11]);\n        lastThreeMonths.push(_this.state.months[0]);\n        lastThreeMonths.push(_this.state.months[index]);\n      } else {\n        lastThreeMonths.push(_this.state.months[index - 2]);\n        lastThreeMonths.push(_this.state.months[index - 1]);\n        lastThreeMonths.push(_this.state.months[index]);\n      }\n\n      return lastThreeMonths;\n    };\n\n    _this.state = {\n      months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n    };\n    return _this;\n  }\n\n  _createClass(UserHome, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchingTransactions(this.props.userId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/users/:id/:categoryId\",\n        render: function render(props) {\n          var categoryId = props.match.params.categoryId;\n          var selectedCategory;\n          var userCurrentTransactions;\n\n          if (_this2.state.transactions) {\n            selectedCategory = _this2.state.transactions.filter(function (transactionObject) {\n              return transactionObject.category.id === parseInt(categoryId);\n            });\n            selectedCategory = selectedCategory[0].category;\n            userCurrentTransactions = _this2.filterCurrentMonthTransactions().filter(function (transactionObject) {\n              return transactionObject.category.id === parseInt(categoryId);\n            });\n          }\n\n          return React.createElement(CategoryDetails, {\n            selectedCategory: selectedCategory,\n            transactions: userCurrentTransactions,\n            userObject: _this2.props.user,\n            addTransaction: _this2.addTransaction,\n            handleDelete: _this2.handleDelete,\n            handleTransactionArrayUpdate: _this2.handleTransactionArrayUpdate,\n            currentMonth: _this2.currentMonth(),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 228\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/users/:id\",\n        render: function render(props) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 243\n            },\n            __self: this\n          }, React.createElement(WelcomeJumbotron, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 245\n            },\n            __self: this\n          }), React.createElement(TipsCarousel, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 246\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 248\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 249\n            },\n            __self: this\n          }), React.createElement(Summary, {\n            transactions: _this2.filterCurrentMonthTransactions(),\n            currentMonth: _this2.currentMonth(),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 251\n            },\n            __self: this\n          }), React.createElement(UserHomeChart, {\n            label: _this2.lineGraphLabels(),\n            data: _this2.threeMonthData(),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 255\n            },\n            __self: this\n          }), React.createElement(CategoryContainer, {\n            transactions: _this2.filterCurrentMonthTransactions(),\n            userObject: _this2.props.user,\n            currentMonth: _this2.currentMonth(),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 259\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return UserHome;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user,\n    transactions: state.transactions\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchingTransactions: fetchingTransactions\n})(UserHome);","map":{"version":3,"sources":["/Users/flatironschool/Development/Final_Project/module_4/expense_tracker-front/src/HomeView/Containers/UserHome.js"],"names":["React","Component","Summary","CategoryContainer","CategoryDetails","UserHomeChart","Route","Switch","connect","fetchingTransactions","WelcomeJumbotron","TipsCarousel","UserHome","filterCurrentMonthTransactions","props","transactions","filter","transactionObject","transactionMonth","parseInt","date","split","transactionYear","currentMonth","Date","getMonth","currentYear","getFullYear","filterLastMonthTransactions","lastMonth","year","presentYear","filterLastLastMonthTransactions","transactionMonthInt","transactionYearInt","lastLastMonth","transactionsReducer","arr","reducer","accumulator","currentValue","total","reduce","floatTotal","Math","floor","threeMonthData","currentMonthTotal","lastMonthTotal","lastLastMonthTotal","currentMonthTransactions","currentMonthTransactionsAmt","map","transaction","amount","length","lastMonthTransactions","lastMonthTransactionsAmt","lastLastMonthTransactions","lastLastMonthTransactionsAmt","addTransaction","allTransactions","state","presentMonth","setState","setThreeMonthData","handleDelete","fetch","id","method","copyOfAllTransactions","indexOfAllTransactions","indexOf","splice","copyOfCurrentMonthTransactions","indexOfCurrentMonthTransactions","handleTransactionArrayUpdate","updateObject","copyOfTransactions","index","months","lineGraphLabels","lastThreeMonths","push","userId","categoryId","match","params","selectedCategory","userCurrentTransactions","category","user","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport Summary from \"./Summary\"\nimport CategoryContainer from \"./CategoryContainer\"\nimport CategoryDetails from \"../../CategoryView/Containers/CategoryDetails\"\nimport UserHomeChart from \"../Components/UserHomeChart.js\"\nimport {Route, Switch} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { fetchingTransactions } from '../../redux/actions/transactions.js'\nimport WelcomeJumbotron from '../WelcomeJumbotron.js'\nimport TipsCarousel from '../TipsCarousel.js'\n\nclass UserHome extends Component {\n  constructor() {\n    super()\n    this.state={\n      months: ['January','February','March','April','May','June','July','August','September','October','November','December']\n    }\n  }\n\n  componentDidMount() {\n    this.props.fetchingTransactions(this.props.userId)\n  }\n\n  filterCurrentMonthTransactions = () => (\n    this.props.transactions.filter(transactionObject => {\n      let transactionMonth = parseInt(transactionObject.date.split(\"-\")[1])\n      let transactionYear = parseInt(transactionObject.date.split(\"-\")[0])\n      let currentMonth = new Date().getMonth() + 1\n      let currentYear = new Date().getFullYear()\n\n      return (currentMonth === transactionMonth) && (currentYear === transactionYear)\n    })\n  )\n\n  filterLastMonthTransactions = () => (\n    this.props.transactions.filter(transactionObject => {\n      let transactionMonth = parseInt(transactionObject.date.split(\"-\")[1])\n      let transactionYear = parseInt(transactionObject.date.split(\"-\")[0])\n      let currentMonth = new Date().getMonth() + 1\n\n      if (currentMonth === 1) {\n        let lastMonth = 12\n        let year = new Date().getFullYear() - 1\n        return (lastMonth === transactionMonth) && (year === transactionYear)\n      } else {\n        let lastMonth = new Date().getMonth()\n        let presentYear = new Date().getFullYear()\n        return (lastMonth === transactionMonth) && (presentYear === transactionYear)\n      }\n    })\n  )\n\n  filterLastLastMonthTransactions = () => (\n    this.props.transactions.filter(transactionObject => {\n      let transactionMonthInt = parseInt(transactionObject.date.split(\"-\")[1])\n      let transactionYearInt = parseInt(transactionObject.date.split(\"-\")[0])\n      let currentMonth = new Date().getMonth() + 1\n\n      if (currentMonth === 1) {\n        let lastLastMonth = 11\n        let year = new Date().getFullYear() - 1\n        return (lastLastMonth === transactionMonthInt) && (year === transactionYearInt)\n      } else {\n        let lastLastMonth = new Date().getMonth() - 1\n        let presentYear = new Date().getFullYear()\n        return (lastLastMonth === transactionMonthInt) && (presentYear === transactionYearInt)\n      }\n    })\n  )\n\n  // TAKES IN ARRAY OF INTEGERS AND RETURNS SUM\n  transactionsReducer = (arr) => {\n    let reducer = (accumulator, currentValue) => accumulator + currentValue\n    let total = arr.reduce(reducer)\n    let floatTotal = Math.floor(total * 100) / 100\n    return floatTotal\n  }\n\n  threeMonthData = () => {\n    let threeMonthData = []\n    let currentMonthTotal;\n    let lastMonthTotal;\n    let lastLastMonthTotal;\n\n    // CURRENT MONTH TOTAL\n    let currentMonthTransactions = this.filterCurrentMonthTransactions()\n    let currentMonthTransactionsAmt = currentMonthTransactions.map(transaction => transaction.amount)\n\n    if (!currentMonthTransactionsAmt.length > 0) {\n      currentMonthTotal = 0.00\n    } else {\n      currentMonthTotal = this.transactionsReducer(currentMonthTransactionsAmt)\n    }\n\n    // LAST MONTH TOTAL\n    let lastMonthTransactions = this.filterLastMonthTransactions()\n    let lastMonthTransactionsAmt = lastMonthTransactions.map(transaction => transaction.amount)\n\n    if (!lastMonthTransactionsAmt.length > 0) {\n      lastMonthTotal = 0.00\n    } else {\n      lastMonthTotal = this.transactionsReducer(lastMonthTransactionsAmt)\n    }\n\n    // LAST LAST MONTH TOTAL\n    let lastLastMonthTransactions = this.filterLastLastMonthTransactions()\n    let lastLastMonthTransactionsAmt = lastLastMonthTransactions.map(transaction => transaction.amount)\n\n    if (!lastLastMonthTransactionsAmt.length > 0) {\n      lastLastMonthTotal = 0.00\n    } else (\n      lastLastMonthTotal = this.transactionsReducer(lastLastMonthTransactionsAmt)\n    )\n\n    threeMonthData = [lastLastMonthTotal, lastMonthTotal, currentMonthTotal]\n\n    return threeMonthData\n  }\n\n  addTransaction = (transactionObject) => {\n    let allTransactions = [...this.state.transactions, transactionObject]\n\n// FILTERS CURRENT MONTH TRANSACTIONS ==========================================\n    let currentMonthTransactions = allTransactions.filter(transactionObject => {\n      let transactionMonthInt = parseInt(transactionObject.date.split(\"-\")[1])\n      let transactionYearInt = parseInt(transactionObject.date.split(\"-\")[0])\n      let presentMonth = new Date().getMonth() + 1\n      let presentYear = new Date().getFullYear()\n      return (presentMonth === transactionMonthInt) && (presentYear === transactionYearInt)\n    })\n//=============================================================================\n    this.setState({\n      transactions: allTransactions,\n      currentMonthTransactions: currentMonthTransactions\n    },\n    this.setThreeMonthData\n    )\n  }\n\n  handleDelete = (transactionObject) => {\n    fetch(`http://localhost:3001/transactions/${transactionObject.id}`, {\n      method: \"DELETE\"\n    })\n\n    // DELETING FROM THIS.STATE.TRANSACTIONS\n    let copyOfAllTransactions = [...this.state.transactions]\n    let indexOfAllTransactions = this.state.transactions.indexOf(transactionObject)\n    copyOfAllTransactions.splice(indexOfAllTransactions, 1)\n    this.setState({\n      transactions: copyOfAllTransactions\n    })\n\n    // DELETING FROM THIS.STATE.CURRENTMONTHTRANSACTIONS\n    let copyOfCurrentMonthTransactions = [...this.filterCurrentMonthTransactions()]\n    let indexOfCurrentMonthTransactions = this.filterCurrentMonthTransactions().indexOf(transactionObject)\n    copyOfCurrentMonthTransactions.splice(indexOfCurrentMonthTransactions, 1)\n    this.setState({\n      currentMonthTransactions: copyOfCurrentMonthTransactions\n    }, this.setThreeMonthData\n    )\n  }\n\n  handleTransactionArrayUpdate = (updateObject, transactionObject) => {\n    let copyOfTransactions = [...this.state.transactions]\n    let index = copyOfTransactions.indexOf(transactionObject)\n    copyOfTransactions.splice(index, 1, updateObject)\n\n// FILTERS CURRENT MONTH TRANSACTIONS ==========================================\n    let currentMonthTransactions = copyOfTransactions.filter(transactionObject => {\n      let transactionMonthInt = parseInt(transactionObject.date.split(\"-\")[1])\n      let transactionYearInt = parseInt(transactionObject.date.split(\"-\")[0])\n      let presentMonth = new Date().getMonth() + 1\n      let presentYear = new Date().getFullYear()\n      return (presentMonth === transactionMonthInt) && (presentYear === transactionYearInt)\n    })\n// =============================================================================\n\n    this.setState({\n      transactions: copyOfTransactions,\n      currentMonthTransactions: currentMonthTransactions\n    }, this.setThreeMonthData\n    )\n  }\n\n  currentMonth = () => {\n    let index = new Date().getMonth()\n    return this.state. months[index]\n  }\n\n  lineGraphLabels = () => {\n    let lastThreeMonths = []\n    let index = new Date().getMonth()\n    if (index === 0) {\n      lastThreeMonths.push(this.state.months[10])\n      lastThreeMonths.push(this.state.months[11])\n      lastThreeMonths.push(this.state.months[index])\n    } else if (index === 1) {\n      lastThreeMonths.push(this.state.months[11])\n      lastThreeMonths.push(this.state.months[0])\n      lastThreeMonths.push(this.state.months[index])\n    } else {\n      lastThreeMonths.push(this.state.months[index-2])\n      lastThreeMonths.push(this.state.months[index-1])\n      lastThreeMonths.push(this.state.months[index])\n    }\n    return lastThreeMonths\n  }\n\n  render() {\n\n\n    return (\n      <div>\n        <Switch>\n        <Route path='/users/:id/:categoryId' render={props => {\n          let categoryId = props.match.params.categoryId\n          let selectedCategory;\n          let userCurrentTransactions;\n\n          if (this.state.transactions) {\n            selectedCategory = this.state.transactions.filter(transactionObject => transactionObject.category.id === parseInt(categoryId))\n            selectedCategory = selectedCategory[0].category\n\n            userCurrentTransactions = this.filterCurrentMonthTransactions().filter(transactionObject => (transactionObject.category.id === parseInt(categoryId)))\n          }\n\n          return (\n            <CategoryDetails\n              selectedCategory={selectedCategory}\n              transactions={userCurrentTransactions}\n              userObject={this.props.user}\n              addTransaction={this.addTransaction}\n              handleDelete={this.handleDelete}\n              handleTransactionArrayUpdate={this.handleTransactionArrayUpdate}\n              currentMonth={this.currentMonth()}\n            />\n          )\n        }} />\n\n        <Route path='/users/:id' render={props => {\n\n          return (\n            <div>\n\n            <WelcomeJumbotron />\n            <TipsCarousel />\n\n            <br/>\n            <br/>\n\n            <Summary\n              transactions={this.filterCurrentMonthTransactions()}\n              currentMonth={this.currentMonth()}\n            />\n            <UserHomeChart\n              label={this.lineGraphLabels()}\n              data={this.threeMonthData()}\n            />\n            <CategoryContainer\n              transactions={this.filterCurrentMonthTransactions()}\n              userObject={this.props.user}\n              currentMonth={this.currentMonth()}\n            />\n            </div>\n          )\n        }} />\n        </Switch>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    transactions: state.transactions\n  }\n}\n\nexport default connect(mapStateToProps, { fetchingTransactions })(UserHome);\n"]},"metadata":{},"sourceType":"module"}